/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./main.js":
/*!*****************!*\
  !*** ./main.js ***!
  \*****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! math */ \"./node_modules/math/index.js\");\n/* harmony import */ var math__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(math__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var graphics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphics */ \"./node_modules/graphics/index.js\");\n/* harmony import */ var _src_shader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/shader */ \"./src/shader/index.js\");\n/* harmony import */ var _src_perlinnoise__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/perlinnoise */ \"./src/perlinnoise.js\");\n/* harmony import */ var _src_marchingCubes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/marchingCubes */ \"./src/marchingCubes/index.js\");\n/* harmony import */ var _src_dualContour__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/dualContour */ \"./src/dualContour/index.js\");\n/* harmony import */ var _src_surfaceMesh__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/surfaceMesh */ \"./src/surfaceMesh/index.js\");\n/* harmony import */ var _src_chunkLoader__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/chunkLoader */ \"./src/chunkLoader.js\");\n\r\nconst cPos = [0, 50, 5];\r\nconst cRot = [0, 0, 0];\r\nconst controls = {\r\n  ArrowDown: () => (cRot[0] -= 0.1),\r\n  ArrowUp: () => (cRot[0] += 0.1),\r\n  ArrowLeft: () => (cRot[1] += 0.1),\r\n  ArrowRight: () => (cRot[1] -= 0.1),\r\n  w: () => {\r\n    const delta = math__WEBPACK_IMPORTED_MODULE_0__.m4.transformPoint(\r\n      math__WEBPACK_IMPORTED_MODULE_0__.m4.xRotate(math__WEBPACK_IMPORTED_MODULE_0__.m4.yRotation(cRot[1]), cRot[0]),\r\n      [0, 0, -1]\r\n    );\r\n    cPos[0] += delta[0];\r\n    cPos[1] += delta[1];\r\n    cPos[2] += delta[2];\r\n  },\r\n  s: () => {\r\n    const delta = math__WEBPACK_IMPORTED_MODULE_0__.m4.transformPoint(\r\n      math__WEBPACK_IMPORTED_MODULE_0__.m4.xRotate(math__WEBPACK_IMPORTED_MODULE_0__.m4.yRotation(cRot[1]), cRot[0]),\r\n      [0, 0, 1]\r\n    );\r\n    cPos[0] += delta[0];\r\n    cPos[1] += delta[1];\r\n    cPos[2] += delta[2];\r\n  },\r\n  a: () => {\r\n    const delta = math__WEBPACK_IMPORTED_MODULE_0__.m4.transformPoint(\r\n      math__WEBPACK_IMPORTED_MODULE_0__.m4.xRotate(math__WEBPACK_IMPORTED_MODULE_0__.m4.yRotation(cRot[1]), cRot[0]),\r\n      [-1, 0, 0]\r\n    );\r\n    cPos[0] += delta[0];\r\n    cPos[1] += delta[1];\r\n    cPos[2] += delta[2];\r\n  },\r\n  d: () => {\r\n    const delta = math__WEBPACK_IMPORTED_MODULE_0__.m4.transformPoint(\r\n      math__WEBPACK_IMPORTED_MODULE_0__.m4.xRotate(math__WEBPACK_IMPORTED_MODULE_0__.m4.yRotation(cRot[1]), cRot[0]),\r\n      [1, 0, 0]\r\n    );\r\n    cPos[0] += delta[0];\r\n    cPos[1] += delta[1];\r\n    cPos[2] += delta[2];\r\n  },\r\n};\r\nconst mouseControls = {\r\n  lastX: 0,\r\n  lastY: 0,\r\n  mousemove: function (e) {\r\n    const deltaX = e.offsetX - this.lastX;\r\n    this.lastX = e.offsetX;\r\n    const deltaY = e.offsetY - this.lastY;\r\n    this.lastY = e.offsetY;\r\n\r\n    cRot[1] -= deltaX * 0.005;\r\n    cRot[0] -= deltaY * 0.005;\r\n  },\r\n};\r\ndocument.onkeydown = (e) => {\r\n  if (!controls[e.key]) return;\r\n  controls[e.key]();\r\n};\r\ndocument.onmousedown = (e) => {\r\n  mouseControls.lastY = e.offsetY;\r\n  mouseControls.lastX = e.offsetX;\r\n  document.onmousemove = mouseControls.mousemove.bind(mouseControls);\r\n  document.onmouseup = () => {\r\n    document.onmousemove = null;\r\n  };\r\n};\r\nlet cameraMatrix = math__WEBPACK_IMPORTED_MODULE_0__.m4.translation(...cPos);\r\ncameraMatrix = math__WEBPACK_IMPORTED_MODULE_0__.m4.yRotate(cameraMatrix, cRot[1]);\r\ncameraMatrix = math__WEBPACK_IMPORTED_MODULE_0__.m4.xRotate(cameraMatrix, cRot[0]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst circleFunc = (x, y, z) =>{\r\n  return 2 - Math.sqrt(x*x + y*y + z*z)\r\n}\r\nconst circleNormal = (x, y, z) =>{\r\n  const l = Math.sqrt(x*x + y*y + z*z)\r\n  return [-x / l, -y / l, -z / l]\r\n}\r\nconst lol = (x, y, z) =>{\r\n  return 48- Math.sqrt(x*x + y*y + z*z)\r\n}\r\n\r\n\r\nconst noise128 = new _src_perlinnoise__WEBPACK_IMPORTED_MODULE_3__[\"default\"](128)\r\nconst noise32 = new _src_perlinnoise__WEBPACK_IMPORTED_MODULE_3__[\"default\"](126)\r\nconst f = (x,z) => (noise128.getValue(x, z)*0.5 +0.5) *60 \r\nconst terrain = new _src_surfaceMesh__WEBPACK_IMPORTED_MODULE_6__[\"default\"](f, 256, 3)\r\nconst chunk = terrain.getChunk(0,0)\r\n\r\nconst chunkLoader = new _src_chunkLoader__WEBPACK_IMPORTED_MODULE_7__[\"default\"](terrain)\r\nchunkLoader.update(0,0)\r\nconsole.log(chunkLoader.active)\r\n\r\n//console.log(positions, indices)\r\nconst context = new graphics__WEBPACK_IMPORTED_MODULE_1__.GLcontextWrapper(\"canvas\");\r\nconst gl = context.getContext();\r\ncontext.resizeCanvasToDisplaySize();\r\nconst drawer = new graphics__WEBPACK_IMPORTED_MODULE_1__.Drawer();\r\ndrawer.setContext(context).update3DProjectionMatrix();\r\n\r\nconst defaultProgramInfo = new graphics__WEBPACK_IMPORTED_MODULE_1__.ProgramInfo(\r\n  graphics__WEBPACK_IMPORTED_MODULE_1__.defaultShaders.vert,\r\n  graphics__WEBPACK_IMPORTED_MODULE_1__.defaultShaders.frag\r\n);\r\n\r\nconst programInfo = new graphics__WEBPACK_IMPORTED_MODULE_1__.ProgramInfo(\r\n  _src_shader__WEBPACK_IMPORTED_MODULE_2__[\"default\"].vert,\r\n  _src_shader__WEBPACK_IMPORTED_MODULE_2__[\"default\"].frag\r\n)\r\nconst pointLightProgramInfo = new graphics__WEBPACK_IMPORTED_MODULE_1__.ProgramInfo(graphics__WEBPACK_IMPORTED_MODULE_1__.pointLightShaders.vert, graphics__WEBPACK_IMPORTED_MODULE_1__.pointLightShaders.frag)\r\npointLightProgramInfo.setContext(context).compileShaders().createUniformSetters();\r\n\r\ndefaultProgramInfo.setContext(context).compileShaders().createUniformSetters();\r\nprogramInfo.setContext(context).compileShaders().createUniformSetters();\r\n\r\nconst primitive = new graphics__WEBPACK_IMPORTED_MODULE_1__.PrimitiveRenderer({\r\n  mode: gl.POINTS,\r\n  \r\n  offset: 0,\r\n  attributes : {\r\n    POSITION : {\r\n      location : 0,\r\n      numComponents : 3,\r\n      type : 5126,\r\n      data : new Float32Array(chunk.positions ),\r\n      count : chunk.positions.length \r\n    },\r\n    NORMAL : {\r\n      location : 1,\r\n      numComponents : 3,\r\n      type : 5126,\r\n      data : new Float32Array(chunk.normals),\r\n      count :  chunk.normals.length \r\n    }\r\n  },\r\n  componentType: 5123,\r\n  numElements: chunk.indices.length,\r\n  indices : new Uint16Array(chunk.indices)\r\n});\r\n\r\nprimitive.setContext(context)\r\n  .createVAO()\r\n  .setDrawer(drawer)\r\n  .setProgramInfo(pointLightProgramInfo)\r\n  .createGeometryBuffers()\r\n  .setAttributes()\r\n  .setMode(4)\r\n\r\nconsole.log(primitive)\r\nconst uniforms = {\r\n  u_lightWorldPosition: [1, 20, 10],\r\n  u_ambientLight: [1, 1, 0.3, 0.11],\r\n  u_reverseLightDirection: [1, 0, 0],\r\n  u_shininess: 300,\r\n};\r\n\r\nlet lastCall = Date.now();\r\nconst fps = document.querySelector(\"#fps\");\r\nconst pos = document.querySelector(\"#pos\");\r\n\r\nconst loop = () => {\r\n  const curentTime = Date.now();\r\n  const delta = curentTime - lastCall;\r\n  fps.textContent = (1 / delta) * 1000;\r\n  pos.textContent = `${Math.floor(cPos[0])}; ${Math.floor(cPos[1])}; ${Math.floor(cPos[2])}`\r\n  lastCall = curentTime;\r\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n  gl.enable(gl.CULL_FACE);\r\n  gl.enable(gl.DEPTH_TEST);\r\n\r\n  cameraMatrix = math__WEBPACK_IMPORTED_MODULE_0__.m4.translation(...cPos);\r\n  cameraMatrix = math__WEBPACK_IMPORTED_MODULE_0__.m4.yRotate(cameraMatrix, cRot[1]);\r\n  cameraMatrix = math__WEBPACK_IMPORTED_MODULE_0__.m4.xRotate(cameraMatrix, cRot[0]);\r\n  \r\n  uniforms.u_lightWorldPosition = [ 0,50,0]\r\n  chunkLoader.tick(cPos[0], cPos[2])\r\n  \r\n  for(const chunk of chunkLoader.active){\r\n\r\n    primitive.bufferSubData('POSITION', new Float32Array(chunk.positions), null, gl.DYNAMIC_DRAW)\r\n    .bufferSubData('NORMAL', new Float32Array(chunk.normals), null, gl.DYNAMIC_DRAW)\r\n    .draw(\r\n      {\r\n        ...uniforms,\r\n        u_matrix: math__WEBPACK_IMPORTED_MODULE_0__.m4.translation(0, 0, 0),\r\n        u_color: [0.5, 0.3, 0.01, 1],\r\n        u_worldViewPosition: cameraMatrix,\r\n      },\r\n      cameraMatrix\r\n    );\r\n  }\r\n  \r\n  \r\n  gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n  requestAnimationFrame(loop);\r\n};\r\nloop();\n\n//# sourceURL=webpack://perlinnoise/./main.js?");

/***/ }),

/***/ "./node_modules/graphics/index.js":
/*!****************************************!*\
  !*** ./node_modules/graphics/index.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ArrayDataFromGltf\": () => (/* reexport safe */ _src_gltfUtils__WEBPACK_IMPORTED_MODULE_1__.ArrayDataFromGltf),\n/* harmony export */   \"Drawer\": () => (/* reexport safe */ _src_Drawer__WEBPACK_IMPORTED_MODULE_6__[\"default\"]),\n/* harmony export */   \"EntityDataFromGltf\": () => (/* reexport safe */ _src_gltfUtils__WEBPACK_IMPORTED_MODULE_1__.EntityDataFromGltf),\n/* harmony export */   \"GLTF\": () => (/* reexport safe */ _src_gltfUtils__WEBPACK_IMPORTED_MODULE_1__.GLTF),\n/* harmony export */   \"GLcontextWrapper\": () => (/* reexport safe */ _src_glContexWrapper__WEBPACK_IMPORTED_MODULE_10__[\"default\"]),\n/* harmony export */   \"MeshRenderer\": () => (/* reexport safe */ _src_MeshRenderer__WEBPACK_IMPORTED_MODULE_2__.MeshRenderer),\n/* harmony export */   \"Model\": () => (/* reexport safe */ _src_Model__WEBPACK_IMPORTED_MODULE_8__[\"default\"]),\n/* harmony export */   \"PrimitiveRenderInfoFromArrayData\": () => (/* reexport safe */ _src_gltfUtils__WEBPACK_IMPORTED_MODULE_1__.PrimitiveRenderInfoFromArrayData),\n/* harmony export */   \"PrimitiveRenderer\": () => (/* reexport safe */ _src_PrimitiveRenderer__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   \"ProgramInfo\": () => (/* reexport safe */ _src_programInfo__WEBPACK_IMPORTED_MODULE_5__.ProgramInfo),\n/* harmony export */   \"SkinnedMeshRenderer\": () => (/* reexport safe */ _src_MeshRenderer__WEBPACK_IMPORTED_MODULE_2__.SkinnedMeshRenderer),\n/* harmony export */   \"TextureInfo\": () => (/* reexport safe */ _src_textureInfo__WEBPACK_IMPORTED_MODULE_7__.TextureInfo),\n/* harmony export */   \"createBox\": () => (/* reexport safe */ _src_primitives__WEBPACK_IMPORTED_MODULE_3__.createBox),\n/* harmony export */   \"createCircle\": () => (/* reexport safe */ _src_primitives__WEBPACK_IMPORTED_MODULE_3__.createCircle),\n/* harmony export */   \"createCone\": () => (/* reexport safe */ _src_primitives__WEBPACK_IMPORTED_MODULE_3__.createCone),\n/* harmony export */   \"createSphere\": () => (/* reexport safe */ _src_primitives__WEBPACK_IMPORTED_MODULE_3__.createSphere),\n/* harmony export */   \"createTruncatedCone\": () => (/* reexport safe */ _src_primitives__WEBPACK_IMPORTED_MODULE_3__.createTruncatedCone),\n/* harmony export */   \"defaultShaders\": () => (/* reexport safe */ _src_render_shaders__WEBPACK_IMPORTED_MODULE_9__.defaultShaders),\n/* harmony export */   \"makeImgFromSvgXml\": () => (/* reexport safe */ _src_textureInfo__WEBPACK_IMPORTED_MODULE_7__.makeImgFromSvgXml),\n/* harmony export */   \"makeStripeImg\": () => (/* reexport safe */ _src_textureInfo__WEBPACK_IMPORTED_MODULE_7__.makeStripeImg),\n/* harmony export */   \"pointLightShaders\": () => (/* reexport safe */ _src_render_shaders__WEBPACK_IMPORTED_MODULE_9__.pointLightShaders)\n/* harmony export */ });\n/* harmony import */ var _src_BufferAttribute__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/BufferAttribute */ \"./node_modules/graphics/src/BufferAttribute.js\");\n/* harmony import */ var _src_gltfUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/gltfUtils */ \"./node_modules/graphics/src/gltfUtils.js\");\n/* harmony import */ var _src_MeshRenderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/MeshRenderer */ \"./node_modules/graphics/src/MeshRenderer.js\");\n/* harmony import */ var _src_primitives__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/primitives */ \"./node_modules/graphics/src/primitives.js\");\n/* harmony import */ var _src_PrimitiveRenderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/PrimitiveRenderer */ \"./node_modules/graphics/src/PrimitiveRenderer.js\");\n/* harmony import */ var _src_programInfo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/programInfo */ \"./node_modules/graphics/src/programInfo.js\");\n/* harmony import */ var _src_Drawer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/Drawer */ \"./node_modules/graphics/src/Drawer.js\");\n/* harmony import */ var _src_textureInfo__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/textureInfo */ \"./node_modules/graphics/src/textureInfo.js\");\n/* harmony import */ var _src_Model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/Model */ \"./node_modules/graphics/src/Model.js\");\n/* harmony import */ var _src_render_shaders__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/render/shaders */ \"./node_modules/graphics/src/render/shaders/index.js\");\n/* harmony import */ var _src_glContexWrapper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./src/glContexWrapper */ \"./node_modules/graphics/src/glContexWrapper.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/index.js?");

/***/ }),

/***/ "./node_modules/graphics/src/BufferAttribute.js":
/*!******************************************************!*\
  !*** ./node_modules/graphics/src/BufferAttribute.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AttributeSetter\": () => (/* binding */ AttributeSetter),\n/* harmony export */   \"BufferAttribute\": () => (/* binding */ BufferAttribute),\n/* harmony export */   \"BufferController\": () => (/* binding */ BufferController),\n/* harmony export */   \"createIndicesBuffer\": () => (/* binding */ createIndicesBuffer)\n/* harmony export */ });\n/* harmony import */ var _programInfo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./programInfo */ \"./node_modules/graphics/src/programInfo.js\");\n/* harmony import */ var _enums__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enums */ \"./node_modules/graphics/src/enums.js\");\n\n\nconst createIndicesBuffer = (gl, indices) => {\n  const buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n  return buffer;\n};\nconst floatAttribSetter = (props) => {\n  const {\n    numComponents,\n    type,\n    location,\n    numAttributes,\n    stride,\n    offset,\n    buffer,\n    gl,\n    divisor,\n  } = props;\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  for (let i = 0; i < numAttributes; i++) {\n    const _offset = numComponents * i * _enums__WEBPACK_IMPORTED_MODULE_1__.TYPED_ARRAYS[type].BYTES_PER_ELEMENT;\n    gl.enableVertexAttribArray(location + i);\n    gl.vertexAttribPointer(\n      location + i,\n      numComponents,\n      type,\n      false,\n      stride,\n      offset + _offset\n    );\n\n    if (divisor) gl.vertexAttribDivisor(location + i, divisor);\n  }\n};\nconst intAttribSetter = (props) => {\n  const {\n    numComponents,\n    type,\n    location,\n    numAttributes,\n    stride,\n    offset,\n    buffer,\n    gl,\n    divisor,\n  } = props;\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  for (let i = 0; i < numAttributes; i++) {\n    const _offset = numComponents * i * _enums__WEBPACK_IMPORTED_MODULE_1__.TYPED_ARRAYS[type].BYTES_PER_ELEMENT;\n    gl.enableVertexAttribArray(location + i);\n    gl.vertexAttribIPointer(\n      location + i,\n      numComponents,\n      type,\n      false,\n      stride,\n      offset + _offset\n    );\n    if (divisor) gl.vertexAttribDivisor(location + i, divisor);\n  }\n};\nconst attribTypeMap = {};\nattribTypeMap[0x1400] = intAttribSetter;\nattribTypeMap[0x1406] = floatAttribSetter;\nattribTypeMap[0x1401] = intAttribSetter;\nattribTypeMap[0x1404] = intAttribSetter;\nattribTypeMap[0x1405] = intAttribSetter;\nattribTypeMap[0x1402] = intAttribSetter;\nattribTypeMap[0x1403] = intAttribSetter;\n\nconst setAttributes = (gl, bufferInfo, divisor) => {\n  const { type } = bufferInfo;\n  const setter = attribTypeMap[type];\n  setter(bufferInfo, divisor);\n};\nclass BufferController {\n  constructor(gl, target = 0x8892) {\n    this.target = target;\n    this.buffer = gl.createBuffer();\n    this.gl = gl;\n    this.bufferData = (data, byteLength, usage = gl.STATIC_DRAW) => {\n      gl.bindBuffer(target, this.buffer);\n      gl.bufferData(target, data || byteLength, usage);\n    };\n    this.bufferSubData = (data, offset = 0) => {\n      gl.bindBuffer(target, this.buffer);\n      gl.bufferSubData(target, offset, data);\n    };\n  }\n}\nclass AttributeSetter {\n  constructor(info) {\n    this.stride = info.stride || 0;\n    this.numComponents = info.numComponents;\n    this.numAttributes = info.numAttributes || 1;\n    this.offset = info.offset || 0;\n    this.type = info.type;\n    this.location = info.location;\n  }\n  setAttribute(bufferController, divisor) {\n    const { type } = this;\n    const setter = attribTypeMap[type];\n    setter(this, bufferController, divisor);\n  }\n}\nclass BufferAttribute {\n  constructor(gl, info) {\n    this.gl = gl;\n    this.buffer = gl.createBuffer();\n    this.stride = info.stride || 0;\n    this.numComponents = info.numComponents;\n    this.numAttributes = info.numAttributes || 1;\n    this.offset = info.offset || 0;\n    this.type = info.type;\n    this.location = info.location;\n    this.divisor = info.divisor;\n  }\n  setAttribute() {\n    const { type, gl } = this;\n    const setter = attribTypeMap[type];\n    setter(this);\n  }\n  bufferData(data, byteLength, usage = 0x88e4) {\n    const { gl, buffer } = this;\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, data || byteLength, usage);\n  }\n  bufferSubData(data, offset = 0) {\n    const { gl, buffer } = this;\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferSubData(gl.ARRAY_BUFFER, offset, data);\n  }\n}\n\n\n\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/src/BufferAttribute.js?");

/***/ }),

/***/ "./node_modules/graphics/src/Drawer.js":
/*!*********************************************!*\
  !*** ./node_modules/graphics/src/Drawer.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! math */ \"./node_modules/math/index.js\");\n/* harmony import */ var math__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(math__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst degToRad = (d) => (d * Math.PI) / 180;\n\nconst fieldOfViewRadians = degToRad(90);\n\nclass Drawer {\n  constructor() {\n    this.context = null;\n    this.projectionMatrix = null;\n    this.fieldOfViewRadians = degToRad(90);\n  }\n  setContext(glContextWrapper) {\n    this.context = glContextWrapper;\n    return this;\n  }\n  setFieldOfView(angle) {\n    this.fieldOfViewRadians = degToRad(angle);\n    return this;\n  }\n  update3DProjectionMatrix(zNear = 0.01, zFar = 2000) {\n    const { gl } = this.context;\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\n    this.projectionMatrix = math__WEBPACK_IMPORTED_MODULE_0__.m4.perspective(\n      fieldOfViewRadians,\n      aspect,\n      zNear,\n      zFar\n    );\n    return this;\n  }\n\n  getViewProjectionMatrix(cameraMatrix) {\n    const { projectionMatrix } = this;\n    const { gl } = this.context;\n    const viewMatrix = math__WEBPACK_IMPORTED_MODULE_0__.m4.inverse(cameraMatrix);\n    return math__WEBPACK_IMPORTED_MODULE_0__.m4.multiply(projectionMatrix, viewMatrix);\n  }\n  draw(renderInfo, uniforms, cameraMatrix) {\n    const viewProjectionMatrix = this.getViewProjectionMatrix(cameraMatrix);\n    const {\n      vao,\n      mode,\n      offset,\n      numElements,\n      indices,\n      componentType,\n      programInfo,\n    } = renderInfo;\n    const { gl } = this.context;\n\n    const u_worldViewProjection = math__WEBPACK_IMPORTED_MODULE_0__.m4.multiply(\n      viewProjectionMatrix,\n      uniforms.u_matrix\n    );\n  \n    this.context.useProgramInfo(programInfo);\n    this.context\n      .getLastUsedProgramInfo()\n      .setUniforms({ ...uniforms,  u_worldViewProjection });\n    if (vao) gl.bindVertexArray(vao);\n    if (!indices) {\n      gl.drawArrays(mode, offset, numElements);\n      return;\n    }\n    gl.drawElements(mode, numElements, componentType, offset);\n  }\n  drawInstanced(renderInfo, uniforms, cameraMatrix, numInstances) {\n    const viewProjectionMatrix = this.getViewProjectionMatrix(cameraMatrix);\n    const { gl } = this.context;\n    const { vao, mode, offset, numElements, indices, programInfo } = renderInfo;\n    const worldViewProjection = math__WEBPACK_IMPORTED_MODULE_0__.m4.multiply(\n      viewProjectionMatrix,\n      uniforms.u_matrix\n    );\n    const worldMatrix = uniforms.u_matrix;\n    this.context.useProgramInfo(programInfo);\n    this.context\n      .getLastUsedProgramInfo()\n      .setUniforms({ ...uniforms, worldMatrix, worldViewProjection });\n    gl.bindVertexArray(vao);\n    if (!indices) {\n      gl.drawArraysInstanced(mode, offset, numElements, numInstances);\n      return;\n    }\n    gl.drawElementsInstanced(\n      mode,\n      numElements,\n      gl.UNSIGNED_SHORT,\n      offset,\n      numInstances\n    );\n  }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Drawer);\n\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/src/Drawer.js?");

/***/ }),

/***/ "./node_modules/graphics/src/MeshRenderer.js":
/*!***************************************************!*\
  !*** ./node_modules/graphics/src/MeshRenderer.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MeshRenderer\": () => (/* binding */ MeshRenderer),\n/* harmony export */   \"SkinnedMeshRenderer\": () => (/* binding */ SkinnedMeshRenderer)\n/* harmony export */ });\n/* harmony import */ var _attribTypeProps__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./attribTypeProps */ \"./node_modules/graphics/src/attribTypeProps.js\");\n/* harmony import */ var _BufferAttribute__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BufferAttribute */ \"./node_modules/graphics/src/BufferAttribute.js\");\n\n\n\nclass MeshRenderer {\n  constructor({ primitives, name }) {\n    this.primitives = primitives;\n    this.name = name;\n    this.context = null;\n    this.buffers = {};\n  }\n  setContext(glContextWrapper) {\n    this.context = glContextWrapper;\n    for (let i = 0, n = this.primitives.length; i < n; i++) {\n      this.primitives[i].setContext(glContextWrapper);\n    }\n    return this;\n  }\n  setProgramInfo(programInfo) {\n    for (let i = 0, n = this.primitives.length; i < n; i++) {\n      this.primitives[i].setProgramInfo(programInfo);\n    }\n    return this;\n  }\n  setDrawer(drawer) {\n    for (let i = 0, n = this.primitives.length; i < n; i++) {\n      this.primitives[i].setDrawer(drawer);\n    }\n    return this;\n  }\n  draw(uniforms, cameraMatrix) {\n    for (let i = 0, n = this.primitives.length; i < n; i++) {\n      this.primitives[i].draw(uniforms, cameraMatrix);\n    }\n    return this;\n  }\n  drawInstanced(uniforms, cameraMatrix, numInstances) {\n    for (let i = 0, n = this.primitives.length; i < n; i++) {\n      this.primitives[i].drawInstanced(uniforms, cameraMatrix, numInstances);\n    }\n    return this;\n  }\n  createPrimitiveBuffers() {\n    this.primitives.forEach((primitive) => primitive.createGeometryBuffers());\n    return this;\n  }\n  createBufferAttribData(name, type, params) {\n    const { gl } = this.context;\n    const attribProps = (0,_attribTypeProps__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(type);\n    const attributeProps = { ...attribProps, ...params };\n    const bufferAttribData = new _BufferAttribute__WEBPACK_IMPORTED_MODULE_1__.BufferAttribute(gl, attributeProps);\n    this.buffers = { ...this.buffers, [name]: bufferAttribData };\n    return this;\n  }\n  bufferData(bufferName, data, byteLength) {\n    const bufferAttributeDescriptor = this.buffers[bufferName];\n\n    bufferAttributeDescriptor.bufferData(data, byteLength);\n    return this;\n  }\n  bufferSubData(bufferName, data, offset) {\n    const bufferAttributeDescriptor = this.buffers[bufferName];\n    bufferAttributeDescriptor.bufferSubData(data, byteLength, offset);\n    return this;\n  }\n  setAttribute(name) {\n    const bufferAttribData = this.buffers[name];\n    this.primitives.forEach((primitive) =>\n      primitive.setAttribute(bufferAttribData)\n    );\n    return this;\n  }\n  setPrimitiveAttributes() {\n    for (let i = 0, n = this.primitives.length; i < n; i++) {\n      this.primitives[i].setAttributes();\n    }\n    return this;\n  }\n}\nclass SkinnedMeshRenderer {\n  constructor(primitives, skin) {\n    this.primitives = primitives;\n    this.skin = skin;\n  }\n  draw(uniforms, cameraMatrix) {\n    this.skin.update(uniforms.u_matrix);\n    const _uniforms = {\n      u_jointTexture: this.skin.jointTexture,\n      u_numJoints: this.skin.joints.length,\n      ...uniforms,\n    };\n    for (let i = 0, n = this.primitives.length; i < n; i++) {\n      this.primitives[i].draw(_uniforms, cameraMatrix);\n    }\n  }\n}\n\n\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/src/MeshRenderer.js?");

/***/ }),

/***/ "./node_modules/graphics/src/Model.js":
/*!********************************************!*\
  !*** ./node_modules/graphics/src/Model.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n\nclass TRS {\n  constructor(translation, rotation, scale) {\n    this.translation = translation;\n    this.rotation = rotation;\n    this.scale = scale;\n  }\n  getMatrix(m) {\n    let dst = m || m4.identity();\n    var t = this.translation;\n    var r = this.rotation;\n    var s = this.scale;\n    const sin = Math.sin(r[3] / 2);\n    const cos = Math.cos(r[3] / 2);\n    dst = m4.translate(dst, t[0], t[1], t[2]);\n\n    dst = m4.multiply(dst, m4.fromQuaternion(r));\n\n    dst = m4.scale(dst, s[0], s[1], s[2]);\n    return dst;\n  }\n  getRMatrix() {\n    let dst = m4.identity();\n    var r = this.rotation;\n    dst = m4.xRotate(dst, r[0]);\n    dst = m4.yRotate(dst, r[1]);\n    dst = m4.zRotate(dst, r[2]);\n    return dst;\n  }\n  getTRmatrix() {\n    const t = this.translation;\n    const r = this.rotation;\n\n    let m = m4.translation( t[0], t[1], t[2]);\n\n    m = m4.xRotate(m, r[0]);\n    m = m4.yRotate(m, r[1]);\n    m = m4.zRotate(m, r[2]);\n    return m\n  }\n}\nclass Node {\n\n  static makeModel(entityDescription, rootNodeNdx) {\n    const { nodes, meshes } = entityDescription;\n    const rootNode = nodes[rootNodeNdx];\n    const makeNode = (nodeDescription, ndx) => {\n      const trs = new TRS(\n        nodeDescription.translation || [0, 0, 0],\n        nodeDescription.rotation || [0, 0, 0],\n        nodeDescription.scale || [1, 1, 1]\n      );\n      const node = new Node(nodeDescription.name, trs, ndx);\n      if (nodeDescription.mesh != undefined) {\n        node.renderer = meshes[nodeDescription.mesh];\n      }\n      if (nodeDescription.children) {\n        nodeDescription.children.forEach((childNdx) => {\n          const child = makeNode(nodes[childNdx], childNdx);\n          child.setParent(node);\n        });\n      }\n      return node;\n    };\n    return makeNode(rootNode, rootNodeNdx);\n  }\n\n  constructor(name, trs = new TRS()) {\n    this.worldMatrix = m4.identity();\n    this.parent = null;\n    this.children = [];\n    this.trs = trs;\n    this.name = name;\n    this.parts = [];\n    this.ndx = ndx;\n    this.skinNdx = null;\n    this.objectsToDraw = [];\n    this.renderer = null;\n  }\n  setParent(parent) {\n    if (this.parent) {\n      const ndx = this.parent.children.indexOf(this);\n      if (ndx >= 0) {\n        this.parent.children.splice(ndx, 1);\n      }\n    }\n    if (parent) {\n      parent.children.push(this);\n    }\n    this.parent = parent;\n  }\n  updateWorldMatrix(parentWorldMatrix) {\n    let matrix = this.trs.getMatrix();\n    if (parentWorldMatrix) {\n      matrix = m4.multiply(parentWorldMatrix, matrix);\n    }\n    this.worldMatrix = matrix;\n    this.children.forEach((child) => {\n      child.updateWorldMatrix(matrix);\n    });\n  }\n  updatePartsList() {\n    const iter = (node, arr) => {\n      arr.push(node);\n      node.children.forEach((child) => iter(child, arr));\n    };\n    iter(this, this.parts);\n  }\n  updateObjectsToDraw() {\n    const queue = [this];\n    while (queue.length > 0) {\n      const node = queue.pop();\n      console.log(node);\n      if (node.renderer) this.objectsToDraw.push(node);\n      if (node.children) queue.push(...node.children);\n    }\n  }\n  traverse(fn) {\n    fn(this);\n    this.children.forEach((child) => child.traverse(fn));\n  }\n  find(ndx) {\n    let result = null;\n    const iter = (nodes) => {\n      for (let node of nodes) {\n        if (node.ndx === ndx) result = node;\n        else iter(node.children);\n      }\n    };\n    iter([this]);\n    return result;\n  }\n  findByName(name) {\n    let result = null;\n    const iter = (nodes) => {\n      for (let node of nodes) {\n        if (node.name === name) result = node;\n        else iter(node.children);\n      }\n    };\n    iter([this]);\n    return result;\n  }\n  render(uniforms, cameraMatrix) {\n    this.objectsToDraw.forEach((object) => {\n      object.renderer.draw(\n        { ...uniforms, u_matrix: object.worldMatrix },\n        cameraMatrix\n      );\n    });\n  }\n}\n\n\n\n\nclass Model extends Node {\n  static makeModel(entityDescription, rootNodeNdx) {\n    const { nodes, meshes } = entityDescription;\n    const rootNode = nodes[rootNodeNdx];\n    const makeNode = (nodeDescription, ndx) => {\n      const trs = new TRS(\n        nodeDescription.translation || [0, 0, 0],\n        nodeDescription.rotation || [0, 0, 0, 0],\n        nodeDescription.scale || [1, 1, 1]\n      );\n      const node = new Entity(nodeDescription.name, trs, ndx);\n      if (nodeDescription.mesh != undefined) {\n        node.renderer = meshes[nodeDescription.mesh];\n      }\n      if (nodeDescription.children) {\n        nodeDescription.children.forEach((childNdx) => {\n          const child = makeNode(nodes[childNdx], childNdx);\n          child.setParent(node);\n        });\n      }\n      return node;\n    };\n    return makeNode(rootNode, rootNodeNdx);\n  }\n  constructor(name, trs, ndx) {\n    super(name, trs);\n    this.ndx = ndx;\n    this.physics = null;\n    this.skinNdx = null;\n    this.objectsToDraw = [];\n    this.renderer = null;\n  }\n  updateObjectsToDraw() {\n    const queue = [this];\n    while (queue.length > 0) {\n      const node = queue.pop();\n      console.log(node);\n      if (node.renderer) this.objectsToDraw.push(node);\n      if (node.children) queue.push(...node.children);\n    }\n  }\n  traverse(fn) {\n    fn(this);\n    this.children.forEach((child) => child.traverse(fn));\n  }\n  find(ndx) {\n    let result = null;\n    const iter = (nodes) => {\n      for (let node of nodes) {\n        if (node.ndx === ndx) result = node;\n        else iter(node.children);\n      }\n    };\n    iter([this]);\n    return result;\n  }\n  findByName(name) {\n    let result = null;\n    const iter = (nodes) => {\n      for (let node of nodes) {\n        if (node.name === name) result = node;\n        else iter(node.children);\n      }\n    };\n    iter([this]);\n    return result;\n  }\n  render(uniforms, cameraMatrix) {\n    this.objectsToDraw.forEach((object) => {\n      object.renderer.draw(\n        { ...uniforms, u_matrix: object.worldMatrix },\n        cameraMatrix\n      );\n    });\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Model);\n\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/src/Model.js?");

/***/ }),

/***/ "./node_modules/graphics/src/PrimitiveRenderer.js":
/*!********************************************************!*\
  !*** ./node_modules/graphics/src/PrimitiveRenderer.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _BufferAttribute__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BufferAttribute */ \"./node_modules/graphics/src/BufferAttribute.js\");\n/* harmony import */ var _enums__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enums */ \"./node_modules/graphics/src/enums.js\");\n/* harmony import */ var _programInfo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./programInfo */ \"./node_modules/graphics/src/programInfo.js\");\n/* harmony import */ var _attribTypeProps__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./attribTypeProps */ \"./node_modules/graphics/src/attribTypeProps.js\");\n\n\n\n\n\nclass PrimitiveRenderer {\n  constructor(arrayData) {\n    this.buffers = {};\n    this.programInfo = null;\n    this.context = null;\n    this.drawer = null;\n    this.mode = null;\n    this.offset = null;\n    this.numElements = null;\n    this.vao = null;\n    this.componentType = null;\n    this.arrayData = arrayData;\n    const {componentType, numElements, mode } = arrayData;\n    this.numElements = numElements;\n    this.mode = mode;\n    this.componentType = componentType || 5123;\n  }\n  setContext(glContextWrapper) {\n    this.context = glContextWrapper;\n    return this;\n  }\n  createVAO() {\n    if (this.vao) return;\n    this.vao = this.context.gl.createVertexArray();\n    return this;\n  }\n  setMode(mode){\n    this.mode = mode\n    return this\n  }\n  createGeometryBuffers() {\n    const { arrayData } = this;\n    const { gl } = this.context;\n    const { attributes, indices, componentType, numElements, mode } = arrayData;\n   \n\n    if (attributes) {\n      Object.keys(attributes).forEach((attributeName) => {\n        const {\n          stride,\n          type,\n          offset,\n          location,\n          numComponents,\n          numAttributes,\n          data,\n          size,\n        } = attributes[attributeName];\n        const bufferAttributeDescriptor = new _BufferAttribute__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(gl, {\n          stride,\n          type,\n          offset,\n          location,\n          numAttributes,\n          numComponents,\n          size,\n        });\n        bufferAttributeDescriptor.bufferData(data);\n        this.buffers = {\n          ...this.buffers,\n          [attributeName]: bufferAttributeDescriptor,\n        };\n      });\n    }\n    if (indices) {\n      const indicesBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indicesBuffer);\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n      this.indices = indicesBuffer;\n    }\n    return this;\n  }\n  setAttributes() {\n    const { gl } = this.context;\n\n    gl.bindVertexArray(this.vao);\n    for (const attrib in this.buffers) {\n      const bufferAttributeDescriptor = this.buffers[attrib];\n      bufferAttributeDescriptor.setAttribute();\n    }\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indices);\n    gl.bindVertexArray(null);\n\n    return this;\n  }\n  setDrawer(drawer) {\n    this.drawer = drawer;\n    return this;\n  }\n  setProgramInfo(programInfo) {\n    this.programInfo = programInfo;\n    return this;\n  }\n  createBufferAttribData(name, type, params) {\n    const { gl } = this.context;\n    const attribProps = (0,_attribTypeProps__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(type);\n    const attributeProps = { ...attribProps, ...params };\n    const bufferAttribData = new _BufferAttribute__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(gl, attributeProps);\n    this.buffers = { ...this.buffers, [name]: bufferAttribData };\n    return this;\n  }\n  setBufferAttribData(name, bufferAttribData) {\n    this.buffers = { ...this.buffers, [name]: bufferAttribData };\n    return this;\n  }\n  setOwnAttribute(name, divisor) {\n    const { gl } = this.context;\n    const bufferAttribData = this.buffers[name];\n    gl.bindVertexArray(this.vao);\n    bufferAttribData.setAttribute(divisor);\n    gl.bindVertexArray(null);\n    return this;\n  }\n  setAttribute(bufferAttribData) {\n    const { gl } = this.context;\n    gl.bindVertexArray(this.vao);\n    bufferAttribData.setAttribute();\n    gl.bindVertexArray(null);\n    return this;\n  }\n  bufferData(bufferName, data, byteLength, usage) {\n    const bufferAttribData = this.buffers[bufferName];\n    bufferAttribData.bufferData(data, byteLength, usage);\n    return this;\n  }\n  bufferSubData(bufferName, data, offset) {\n    const bufferDesc = this.buffers[bufferName];\n    bufferDesc.bufferSubData(data, offset);\n    return this;\n  }\n  draw(uniforms, cameraMatrix) {\n    this.drawer.draw(this, uniforms, cameraMatrix);\n    return this;\n  }\n  drawInstanced(uniforms, cameraMatrix, numInstances) {\n    this.drawer.drawInstanced(this, uniforms, cameraMatrix, numInstances);\n    return this;\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PrimitiveRenderer);\n\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/src/PrimitiveRenderer.js?");

/***/ }),

/***/ "./node_modules/graphics/src/attribTypeProps.js":
/*!******************************************************!*\
  !*** ./node_modules/graphics/src/attribTypeProps.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst props = {\n  mat4: {\n    stride: 64,\n    byteLength: 64,\n    type: 0x1406,\n    numAttributes: 4,\n    numComponents: 4,\n  },\n  vec3: {\n    numComponents: 3,\n    type: 0x1406,\n    numAttributes: 1,\n  },\n};\nconst getAttributePropsByType = (type) => props[type];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getAttributePropsByType);\n\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/src/attribTypeProps.js?");

/***/ }),

/***/ "./node_modules/graphics/src/enums.js":
/*!********************************************!*\
  !*** ./node_modules/graphics/src/enums.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ELEMENT_SIZE\": () => (/* binding */ ELEMENT_SIZE),\n/* harmony export */   \"LOCATIONS\": () => (/* binding */ LOCATIONS),\n/* harmony export */   \"NUM_COMPONENTS\": () => (/* binding */ NUM_COMPONENTS),\n/* harmony export */   \"TYPED_ARRAYS\": () => (/* binding */ TYPED_ARRAYS)\n/* harmony export */ });\nconst TYPED_ARRAYS = {\n    '5120': Int8Array,    \n    '5121': Uint8Array,   \n    '5122': Int16Array,   \n    '5123': Uint16Array,  \n    '5124': Int32Array,   \n    '5125': Uint32Array,  \n    '5126': Float32Array, \n}\nconst NUM_COMPONENTS = {\n    'SCALAR' : 1,\n    'VEC2' : 2,\n    'VEC3' : 3,\n    'VEC4' : 4,\n    'MAT2': 4,\n  'MAT3': 9,\n  'MAT4': 16,\n}\nconst LOCATIONS = {\n    'POSITION' : 0,\n    'NORMAL' : 1,\n    'WEIGHTS_0' : 2,\n    'JOINTS_0' : 3,\n    'TEXCOORD_0' : 4,\n}\nconst ELEMENT_SIZE = {\n    0x1406 : 4\n}\n\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/src/enums.js?");

/***/ }),

/***/ "./node_modules/graphics/src/glContexWrapper.js":
/*!******************************************************!*\
  !*** ./node_modules/graphics/src/glContexWrapper.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GLcontextWrapper)\n/* harmony export */ });\n/* harmony import */ var _textureInfo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./textureInfo */ \"./node_modules/graphics/src/textureInfo.js\");\n\nclass GLcontextWrapper {\n    constructor(canvas_id) {\n      const canvas = document.querySelector(`#${canvas_id}`);\n      const gl = canvas.getContext(\"webgl2\");\n  \n      if (!gl) {\n        throw new Error(\"No webgl!\");\n      }\n      this.gl = gl;\n      this.textures = {};\n      this.renderCache = {\n        lastUsedProgramInfo: null,\n      };\n      this.programs = {};\n    }\n    getLastUsedProgramInfo() {\n      return this.renderCache.lastUsedProgramInfo;\n    }\n    setLastUsedProgram(programInfo) {\n      this.renderCache.lastUsedProgramInfo = programInfo;\n      return this;\n    }\n    useProgramInfo(programInfo) {\n      if (programInfo != this.getLastUsedProgramInfo()) {\n        this.gl.useProgram(programInfo.program);\n        this.setLastUsedProgram(programInfo);\n      }\n      return this;\n    }\n    resizeCanvasToDisplaySize(multiplier = 1) {\n      const canvas = this.gl.canvas;\n      const width = (canvas.clientWidth * multiplier) | 0;\n      const height = (canvas.clientHeight * multiplier) | 0;\n  \n      canvas.width = width;\n      canvas.height = height;\n      return this;\n    }\n    resizeCanvas(width, height) {\n      const canvas = this.gl.canvas;\n      canvas.width = width;\n      canvas.height = height;\n      return this;\n    }\n    getContext() {\n      return this.gl;\n    }\n    getCanvasRect() {\n      return this.gl.canvas.getBoundin;\n    }\n    createTextureInfo(textureName) {\n      const texture = new _textureInfo__WEBPACK_IMPORTED_MODULE_0__.TextureInfo(this.gl);\n      this.textures = { ...this.textures, [textureName]: texture };\n      return this;\n    }\n    getTexture(textureName) {\n      return this.textures[textureName];\n    }\n    setTextureUnit(textureName, unitNum) {\n      const texture = this.getTexture(textureName).texture;\n      setTextureUnits(this.gl, texture, unitNum);\n      return this;\n    }\n  }\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/src/glContexWrapper.js?");

/***/ }),

/***/ "./node_modules/graphics/src/gltfUtils.js":
/*!************************************************!*\
  !*** ./node_modules/graphics/src/gltfUtils.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ArrayDataFromGltf\": () => (/* binding */ ArrayDataFromGltf),\n/* harmony export */   \"EntityDataFromGltf\": () => (/* binding */ EntityDataFromGltf),\n/* harmony export */   \"GLTF\": () => (/* binding */ GLTF),\n/* harmony export */   \"PrimitiveRenderInfoFromArrayData\": () => (/* binding */ PrimitiveRenderInfoFromArrayData)\n/* harmony export */ });\n/* harmony import */ var _PrimitiveRenderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PrimitiveRenderer */ \"./node_modules/graphics/src/PrimitiveRenderer.js\");\n/* harmony import */ var _MeshRenderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MeshRenderer */ \"./node_modules/graphics/src/MeshRenderer.js\");\n/* harmony import */ var _BufferAttribute__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./BufferAttribute */ \"./node_modules/graphics/src/BufferAttribute.js\");\n/* harmony import */ var _enums__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./enums */ \"./node_modules/graphics/src/enums.js\");\n\n\n\n\n\nconst ArrayDataFromGltf = (gltf, buffers) => {\n  const { bufferViews, accessors, meshes, nodes } = gltf;\n  const attribDataFromAccessor = (accessor) => {\n    const bufferView = bufferViews[accessor.bufferView];\n    const { count, componentType, type } = accessor;\n    const byteOffset = accessor.byteOffset || 0;\n    const { byteLength, target } = bufferView;\n    const stride = bufferView.byteStride || 0;\n    const bufferViewByteOffset = bufferView.byteOffset || 0;\n    const buffer = buffers[bufferView.buffer];\n\n    return {\n      data: new Uint8Array(buffer, bufferViewByteOffset, byteLength),\n      numComponents: _enums__WEBPACK_IMPORTED_MODULE_3__.NUM_COMPONENTS[type],\n      stride,\n      byteLength,\n      location: null,\n      count,\n      type: componentType,\n      offset: byteOffset || 0,\n      componentType: accessor.componentType,\n    };\n  };\n  const _meshes = meshes.map((mesh) => ({\n    primitives: mesh.primitives.map((_primitive) => {\n      const primitive = {\n        attributes: {},\n        mode: _primitive.mode,\n      };\n      if (_primitive.hasOwnProperty(\"indices\")) {\n        const indicesInfo = attribDataFromAccessor(\n          accessors[_primitive.indices]\n        );\n        primitive.indices = indicesInfo.data;\n        primitive.numElements = indicesInfo.count;\n        primitive.componentType = indicesInfo.componentType;\n      }\n      Object.keys(_primitive.attributes).forEach((attribName) => {\n        const attribute = _primitive.attributes[attribName];\n        primitive.attributes[attribName] = attribDataFromAccessor(\n          accessors[attribute]\n        );\n        //if(attribName === 'JOINTS_0') _primitive.attributes[attribName].data = new Uint32Array(_primitive.attributes[attribName].data)\n        primitive.attributes[attribName].location = _enums__WEBPACK_IMPORTED_MODULE_3__.LOCATIONS[attribName];\n      });\n      return primitive;\n    }),\n    name: mesh.name,\n  }));\n\n  return _meshes.map((mesh) => {\n    const primitives = mesh.primitives.map(\n      (primitive) => new _PrimitiveRenderer__WEBPACK_IMPORTED_MODULE_0__[\"default\"](primitive)\n    );\n    const name = mesh.name;\n\n    return new _MeshRenderer__WEBPACK_IMPORTED_MODULE_1__.MeshRenderer({ primitives, name });\n  });\n};\n\nconst PrimitiveRenderInfoFromArrayData = (meshes) =>\n  meshes.map((mesh) => {\n    const primitives = mesh.primitives.map(\n      (primitive) => new _PrimitiveRenderer__WEBPACK_IMPORTED_MODULE_0__[\"default\"](primitive)\n    );\n    const name = mesh.name;\n    return new _MeshRenderer__WEBPACK_IMPORTED_MODULE_1__.MeshRenderer({ name, primitives });\n  });\n\nconst EntityDataFromGltf = (gltf, buffers) =>\n  PrimitiveRenderInfoFromArrayData(ArrayDataFromGltf(gltf, buffers));\n\nclass GLTF {\n  constructor(gltf, binaryBuffers) {\n    const { nodes } = gltf;\n    this.nodes = nodes;\n    this.meshes = ArrayDataFromGltf(gltf, binaryBuffers);\n  }\n}\n\n\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/src/gltfUtils.js?");

/***/ }),

/***/ "./node_modules/graphics/src/primitives.js":
/*!*************************************************!*\
  !*** ./node_modules/graphics/src/primitives.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createBox\": () => (/* binding */ createBox),\n/* harmony export */   \"createCircle\": () => (/* binding */ createCircle),\n/* harmony export */   \"createCone\": () => (/* binding */ createCone),\n/* harmony export */   \"createSphere\": () => (/* binding */ createSphere),\n/* harmony export */   \"createTruncatedCone\": () => (/* binding */ createTruncatedCone)\n/* harmony export */ });\n/* harmony import */ var _programInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./programInfo.js */ \"./node_modules/graphics/src/programInfo.js\");\n/* harmony import */ var math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! math */ \"./node_modules/math/index.js\");\n/* harmony import */ var math__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(math__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst { cross, diff, normalize } = math__WEBPACK_IMPORTED_MODULE_1__.vec3\n\nconst linedBoxIndices = new Uint16Array([\n  0,\n  1,\n  1,\n  2,\n  2,\n  3,\n  3,\n  0, // front\n  0,\n  5,\n  5,\n  4,\n  4,\n  1,\n  1,\n  0, //bottom\n  0,\n  4,\n  4,\n  7,\n  7,\n  3,\n  3,\n  0, //left\n  1,\n  2,\n  2,\n  6,\n  6,\n  5,\n  5,\n  1, //right\n  4,\n  5,\n  5,\n  6,\n  6,\n  7,\n  7,\n  4, // back\n  2,\n  7,\n  7,\n  3,\n  3,\n  6,\n  6,\n  2, // top\n]);\n\nconst CUBE_FACE_INDICES = [\n  [3, 7, 5, 1], // right\n  [6, 2, 0, 4], // left\n  [6, 7, 3, 2], // ??\n  [0, 1, 5, 4], // ??\n  [7, 6, 4, 5], // front\n  [2, 3, 1, 0], // back\n];\n\nfunction createBox(_a = 1, _b = 1, _c = 1) {\n  const a = _a / 2,\n    b = _b / 2,\n    c = _c / 2;\n  const cornerVertices = [\n    [-a, -b, -c],\n    [+a, -b, -c],\n    [-a, +b, -c],\n    [+a, +b, -c],\n    [-a, -b, +c],\n    [+a, -b, +c],\n    [-a, +b, +c],\n    [+a, +b, +c],\n  ];\n\n  const faceNormals = [\n    [+1, +0, +0],\n    [-1, +0, +0],\n    [+0, +1, +0],\n    [+0, -1, +0],\n    [+0, +0, +1],\n    [+0, +0, -1],\n  ];\n\n  const uvCoords = [\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [1, 1],\n  ];\n  const numVertices = 6 * 4;\n  const positions = (0,_programInfo_js__WEBPACK_IMPORTED_MODULE_0__.expandedTypedArray)(new Float32Array(numVertices * 3));\n  const normals = (0,_programInfo_js__WEBPACK_IMPORTED_MODULE_0__.expandedTypedArray)(new Float32Array(numVertices * 3));\n  //const texCoords = webglUtils.createAugmentedTypedArray(2 , numVertices);\n  const indices = (0,_programInfo_js__WEBPACK_IMPORTED_MODULE_0__.expandedTypedArray)(new Uint16Array(6 * 2 * 3));\n\n  for (let f = 0; f < 6; ++f) {\n    const faceIndices = CUBE_FACE_INDICES[f];\n    for (let v = 0; v < 4; ++v) {\n      const position = cornerVertices[faceIndices[v]];\n      const normal = faceNormals[f];\n      positions.push(position);\n      normals.push(normal);\n    }\n\n    const offset = 4 * f;\n    indices.push(offset + 0, offset + 1, offset + 2);\n    indices.push(offset + 0, offset + 2, offset + 3);\n  }\n  const len = positions.byteLength;\n  const texcoord = new Float32Array([\n    // Front\n    0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n    // Back\n    0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n    // Top\n    0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n    // Bottom\n    0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n    // Right\n    0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n    // Left\n    0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0,\n  ]);\n\n  const ArrayData = {\n    attributes: {\n      NORMAL: {\n        data: normals,\n        count: 6 * 4 * 3,\n        location: 1,\n        byteLength: normals.byteLength,\n        stride: 0,\n        offset: 0,\n        numComponents: 3,\n        type: 5126,\n      },\n      POSITION: {\n        data: positions,\n        count: 6 * 4 * 3,\n        location: 0,\n        byteLength: positions.byteLength,\n        stride: 0,\n        offset: 0,\n        numComponents: 3,\n        type: 5126,\n      },\n      TEXCOORD_0: {\n        data: texcoord,\n        count: 48,\n        type: 5126,\n        offset: 0,\n        stride: 0,\n        byteLength: texcoord.byteLength,\n        location: 4,\n        numComponents: 2,\n      },\n    },\n    indices: indices,\n    numElements: indices.length,\n    componentType: 5123,\n    mode: 4,\n  };\n  return ArrayData;\n  /*return {\n          gltf : {\n            accessors : [\n            {\n                bufferView : 0,\n                byteOffset : 0,\n                count :72,\n                componentType : 5126,\n                type : 'VEC3'\n            },\n            {\n              bufferView : 1,\n              byteOffset : 0,\n              count : 72,\n              componentType : 5126,\n              type : 'VEC3'\n            },\n            {\n              bufferView : 2,\n              byteOffset : 0,\n              count : 36,\n              componentType : 5123,\n              type : 'SCALAR'\n            },\n            {\n              bufferView : 3,\n              byteOffset : 0,\n              count : 48,\n              componentType : 5126,\n              type : 'VEC2'\n            }\n            ],\n          bufferViews : [\n              {\n                buffer : 0,\n                byteLength : positions.byteLength,\n                byteOffset : 0\n              },\n              {\n                buffer : 1,\n                byteLength : normals.byteLength,\n                byteOffset : 0\n              },\n              {\n                buffer : 2,\n                byteLength : indices.byteLength,\n                byteOffset : 0\n              },\n              {\n                buffer : 3,\n                byteLength : texcoord.byteLength,\n                byteOffset : 0\n              }\n            ],\n          meshes : [\n            {\n              name : 'Cube',\n              primitives : [\n                {\n                  attributes : {\n                    NORMAL : 1,\n                    POSITION : 0,\n                    TEXCOORD_0 : 3\n                  },\n                  indices : 2,\n                  mode : 4\n                }\n              ]\n            }\n          ],\n          nodes : [\n            {\n              name : \"Cube\",\n              mesh : 0,\n              children : [1]\n            },\n            {\n              name : 'Cube2',\n              mesh : 0,\n              translation : [1,1,1]\n            }\n          ]\n        },\n        binaryBuffers : [\n          positions.buffer, normals.buffer, indices.buffer, texcoord.buffer\n        ]\n      };*/\n}\n\nconst createCone = (radius = 2, height = 2, numCorners = 4) => {\n  const vertices = [0, -height / 2, 0];\n  const normals = [];\n  const indices = [];\n\n  for (let i = 0; i < numCorners + 1; i++) {\n    const angle = (2 * i * Math.PI) / numCorners;\n    const x = Math.cos(angle) * radius;\n    const z = Math.sin(angle) * radius;\n    const y = -height / 2;\n    vertices.push(x, -height / 2, z);\n    normals.push(0, -1, 0);\n  }\n  for (let i = 0; i < numCorners; i++) {\n    indices.push(0, i + 1, i + 2);\n  }\n  //vertices.push(vertices[1], -height/2, vertices[3])\n  const n = vertices.length / 3;\n  const stride = 3;\n  const start = n;\n\n  for (let i = 0; i < numCorners + 2; i++) {\n    const angle = (2 * i * Math.PI) / numCorners;\n    const x = Math.cos(angle) * radius;\n    const z = Math.sin(angle) * radius;\n    const y = -height / 2;\n    const a = [vertices[i * 3], vertices[i * 3 + 1], vertices[i * 3 + 2]];\n    const b = [vertices[i * 3 + 3], vertices[i * 3 + 4], vertices[i * 3 + 5]];\n    const c = [0, height / 2, 0];\n    indices.push(\n      start + i * stride + 2,\n      start + i * stride + 1,\n      start + i * stride + 3\n    );\n    vertices.push(...c, ...a, ...b);\n    const normal = normalize(cross(diff(b, c), diff(a, c)));\n    normals.push(...normal, ...normal, ...normal);\n  }\n\n  const _normal = new Float32Array(normals);\n  const _position = new Float32Array(vertices);\n  const _indices = new Uint16Array(indices);\n  const ArrayData = {\n    attributes: {\n      POSITION: {\n        location: 0,\n        count: vertices.length,\n        offset: 0,\n        stride: 0,\n        numComponents: 3,\n        type: 5126,\n        data: _position,\n        byteLength: _position.byteLength,\n      },\n      NORMAL: {\n        location: 1,\n        count: normals.length,\n        numComponents: 3,\n        offset: 0,\n        stride: 0,\n        type: 5126,\n        data: _normal,\n        byteLength: _normal.byteLength,\n      },\n    },\n    componentType: 5123,\n    indices: _indices,\n    numElements: indices.length,\n    mode: 4,\n  };\n  return ArrayData;\n};\n\nconst createCircle = (radius, numCorners) => {\n  const vertices = [0, 0, 0];\n  const normals = [];\n  const indices = [];\n\n  for (let i = 0; i < numCorners + 1; i++) {\n    const angle = (2 * i * Math.PI) / numCorners;\n    const x = Math.cos(angle) * radius;\n    const z = Math.sin(angle) * radius;\n\n    vertices.push(x, 0, z);\n    normals.push(0, 1, 0);\n  }\n  for (let i = 0; i < numCorners; i++) {\n    indices.push(0, i + 1, i + 2);\n  }\n\n  const _normal = new Float32Array(normals);\n  const _position = new Float32Array(vertices);\n  const _indices = new Uint16Array(indices);\n\n  const ArrayData = {\n    attributes: {\n      POSITION: {\n        location: 0,\n        count: vertices.length,\n        offset: 0,\n        stride: 0,\n        numComponents: 3,\n        type: 5126,\n        data: _position,\n        byteLength: _position.byteLength,\n      },\n      NORMAL: {\n        location: 1,\n        count: normals.length,\n        numComponents: 3,\n        offset: 0,\n        stride: 0,\n        type: 5126,\n        data: _normal,\n        byteLength: _normal.byteLength,\n      },\n    },\n    componentType: 5123,\n    indices: _indices,\n    numElements: indices.length,\n    mode: 4,\n  };\n  return ArrayData;\n};\n\nconst createSphere = (\n  radius,\n  subdivisionsAxis,\n  subdivisionsHeight,\n  opt_startLatitudeInRadians,\n  opt_endLatitudeInRadians,\n  opt_startLongitudeInRadians,\n  opt_endLongitudeInRadians\n) => {\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n    throw new Error(\"subdivisionAxis and subdivisionHeight must be > 0\");\n  }\n\n  opt_startLatitudeInRadians = opt_startLatitudeInRadians || 0;\n  opt_endLatitudeInRadians = opt_endLatitudeInRadians || Math.PI;\n  opt_startLongitudeInRadians = opt_startLongitudeInRadians || 0;\n  opt_endLongitudeInRadians = opt_endLongitudeInRadians || Math.PI * 2;\n\n  const latRange = opt_endLatitudeInRadians - opt_startLatitudeInRadians;\n  const longRange = opt_endLongitudeInRadians - opt_startLongitudeInRadians;\n\n  const positions = [];\n  const normals = [];\n  const texcoords = [];\n\n  for (let y = 0; y <= subdivisionsHeight; y++) {\n    for (let x = 0; x <= subdivisionsAxis; x++) {\n      const u = x / subdivisionsAxis;\n      const v = y / subdivisionsHeight;\n      const theta = longRange * u + opt_startLongitudeInRadians;\n      const phi = latRange * v + opt_startLatitudeInRadians;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      const sinPhi = Math.sin(phi);\n      const cosPhi = Math.cos(phi);\n      const ux = cosTheta * sinPhi;\n      const uy = cosPhi;\n      const uz = sinTheta * sinPhi;\n      positions.push(radius * ux, radius * uy, radius * uz);\n      normals.push(ux, uy, uz);\n      texcoords.push(1 - u, v);\n    }\n  }\n\n  const numVertsAround = subdivisionsAxis + 1;\n  const indices = [];\n  for (let x = 0; x < subdivisionsAxis; x++) {\n    for (let y = 0; y < subdivisionsHeight; y++) {\n      indices.push(\n        (y + 0) * numVertsAround + x,\n        (y + 0) * numVertsAround + x + 1,\n        (y + 1) * numVertsAround + x\n      );\n      indices.push(\n        (y + 1) * numVertsAround + x,\n        (y + 0) * numVertsAround + x + 1,\n        (y + 1) * numVertsAround + x + 1\n      );\n    }\n  }\n  const _positions = new Float32Array(positions);\n  const _normals = new Float32Array(normals);\n  const _texcoords = new Float32Array(texcoords);\n  const _indices = new Uint16Array(indices);\n\n  return {\n    attributes: {\n      POSITION: {\n        location: 0,\n        count: positions.length,\n        offset: 0,\n        stride: 0,\n        numComponents: 3,\n        type: 5126,\n        data: _positions,\n        byteLength: _positions.byteLength,\n      },\n      NORMAL: {\n        location: 1,\n        count: normals.length,\n        numComponents: 3,\n        offset: 0,\n        stride: 0,\n        type: 5126,\n        data: _normals,\n        byteLength: _normals.byteLength,\n      },\n      TEXCOORD_0: {\n        data: _texcoords,\n        count: _texcoords.length,\n        type: 5126,\n        offset: 0,\n        stride: 0,\n        byteLength: _texcoords.byteLength,\n        location: 4,\n        numComponents: 2,\n      },\n    },\n    componentType: 5123,\n    indices: _indices,\n    numElements: indices.length,\n    mode: 4,\n  };\n};\nconst createTruncatedCone = (\n  bottomRadius,\n  topRadius,\n  height,\n  radialSubdivisions,\n  verticalSubdivisions,\n  opt_topCap,\n  opt_bottomCap\n) => {\n  if (radialSubdivisions < 3) {\n    throw new Error(\"radialSubdivisions must be 3 or greater\");\n  }\n\n  if (verticalSubdivisions < 1) {\n    throw new Error(\"verticalSubdivisions must be 1 or greater\");\n  }\n\n  const topCap = opt_topCap === undefined ? true : opt_topCap;\n  const bottomCap = opt_bottomCap === undefined ? true : opt_bottomCap;\n\n  const extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n\n  const numVertices =\n    (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n  const positions = [];\n  const normals = [];\n  const texcoords = [];\n  const indices = [];\n\n  const vertsAroundEdge = radialSubdivisions + 1;\n\n  const slant = Math.atan2(bottomRadius - topRadius, height);\n  const cosSlant = Math.cos(slant);\n  const sinSlant = Math.sin(slant);\n\n  const start = topCap ? -2 : 0;\n  const end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n  for (let yy = start; yy <= end; ++yy) {\n    let v = yy / verticalSubdivisions;\n    let y = height * v;\n    let ringRadius;\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > verticalSubdivisions) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius =\n        bottomRadius + (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n    }\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n    y -= height / 2;\n    for (let ii = 0; ii < vertsAroundEdge; ++ii) {\n      const sin = Math.sin((ii * Math.PI * 2) / radialSubdivisions);\n      const cos = Math.cos((ii * Math.PI * 2) / radialSubdivisions);\n      positions.push(sin * ringRadius, y, cos * ringRadius);\n      if (yy < 0) {\n        normals.push(0, -1, 0);\n      } else if (yy > verticalSubdivisions) {\n        normals.push(0, 1, 0);\n      } else if (ringRadius === 0.0) {\n        normals.push(0, 0, 0);\n      } else {\n        normals.push(sin * cosSlant, sinSlant, cos * cosSlant);\n      }\n      texcoords.push(ii / radialSubdivisions, 1 - v);\n    }\n  }\n\n  for (let yy = 0; yy < verticalSubdivisions + extra; ++yy) {\n    if (\n      (yy === 1 && topCap) ||\n      (yy === verticalSubdivisions + extra - 2 && bottomCap)\n    ) {\n      continue;\n    }\n    for (let ii = 0; ii < radialSubdivisions; ++ii) {\n      indices.push(\n        vertsAroundEdge * (yy + 0) + 0 + ii,\n        vertsAroundEdge * (yy + 0) + 1 + ii,\n        vertsAroundEdge * (yy + 1) + 1 + ii\n      );\n      indices.push(\n        vertsAroundEdge * (yy + 0) + 0 + ii,\n        vertsAroundEdge * (yy + 1) + 1 + ii,\n        vertsAroundEdge * (yy + 1) + 0 + ii\n      );\n    }\n  }\n  const _positions = new Float32Array(positions);\n  const _normals = new Float32Array(normals);\n  const _texcoords = new Float32Array(texcoords);\n  const _indices = new Uint16Array(indices);\n  return {\n    attributes: {\n      POSITION: {\n        location: 0,\n        count: positions.length,\n        offset: 0,\n        stride: 0,\n        numComponents: 3,\n        type: 5126,\n        data: _positions,\n        byteLength: _positions.byteLength,\n      },\n      NORMAL: {\n        location: 1,\n        count: normals.length,\n        numComponents: 3,\n        offset: 0,\n        stride: 0,\n        type: 5126,\n        data: _normals,\n        byteLength: _normals.byteLength,\n      },\n      TEXCOORD_0: {\n        data: _texcoords,\n        count: _texcoords.length,\n        type: 5126,\n        offset: 0,\n        stride: 0,\n        byteLength: _texcoords.byteLength,\n        location: 4,\n        numComponents: 2,\n      },\n    },\n    componentType: 5123,\n    indices: _indices,\n    numElements: indices.length,\n    mode: 4,\n  };\n};\n\n\n\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/src/primitives.js?");

/***/ }),

/***/ "./node_modules/graphics/src/programInfo.js":
/*!**************************************************!*\
  !*** ./node_modules/graphics/src/programInfo.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ProgramInfo\": () => (/* binding */ ProgramInfo),\n/* harmony export */   \"expandedTypedArray\": () => (/* binding */ expandedTypedArray),\n/* harmony export */   \"getGLTypeForTypedArray\": () => (/* binding */ getGLTypeForTypedArray)\n/* harmony export */ });\nfunction getGLTypeForTypedArray(gl, typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return gl.BYTE;\n  } // eslint-disable-line\n  if (typedArray instanceof Uint8Array) {\n    return gl.UNSIGNED_BYTE;\n  } // eslint-disable-line\n  if (typedArray instanceof Uint8ClampedArray) {\n    return gl.UNSIGNED_BYTE;\n  } // eslint-disable-line\n  if (typedArray instanceof Int16Array) {\n    return gl.SHORT;\n  } // eslint-disable-line\n  if (typedArray instanceof Uint16Array) {\n    return gl.UNSIGNED_SHORT;\n  } // eslint-disable-line\n  if (typedArray instanceof Int32Array) {\n    return gl.INT;\n  } // eslint-disable-line\n  if (typedArray instanceof Uint32Array) {\n    return gl.UNSIGNED_INT;\n  } // eslint-disable-line\n  if (typedArray instanceof Float32Array) {\n    return gl.FLOAT;\n  } // eslint-disable-line\n  return false;\n}\nfunction expandedTypedArray(array) {\n  let cursor = 0;\n  array.push = function () {\n    for (let ii = 0; ii < arguments.length; ++ii) {\n      const value = arguments[ii];\n\n      if (\n        value instanceof Array ||\n        (value.buffer && value.buffer instanceof ArrayBuffer)\n      ) {\n        for (let jj = 0; jj < value.length; ++jj) {\n          array[cursor++] = value[jj];\n        }\n      } else {\n        array[cursor++] = value;\n      }\n    }\n  };\n\n  return array;\n}\n\nfunction createUniformSetters(gl, program) {\n  const createTextureSetter = (program, uniformInfo) => {\n    const location = gl.getUniformLocation(program, uniformInfo.name);\n\n    return (texBlockNum) => {\n      gl.uniform1i(location, texBlockNum);\n    };\n  };\n  function createUniformSetter(program, uniformInfo) {\n    const location = gl.getUniformLocation(program, uniformInfo.name);\n\n    const type = uniformInfo.type;\n\n    const isArray =\n      uniformInfo.size > 1 && uniformInfo.name.substr(-3) === \"[0]\";\n\n    if (type === gl.FLOAT && isArray) {\n      return function (v) {\n        gl.uniform1fv(location, v);\n      };\n    }\n    if (type === gl.FLOAT) {\n      return function (v) {\n        gl.uniform1f(location, v);\n      };\n    }\n    if (type === gl.FLOAT_VEC2) {\n      return function (v) {\n        gl.uniform2fv(location, v);\n      };\n    }\n    if (type === gl.FLOAT_VEC3) {\n      return function (v) {\n        gl.uniform3fv(location, v);\n      };\n    }\n    if (type === gl.FLOAT_VEC4) {\n      return function (v) {\n        gl.uniform4fv(location, v);\n      };\n    }\n    if (type === gl.INT && isArray) {\n      return function (v) {\n        gl.uniform1iv(location, v);\n      };\n    }\n    if (type === gl.INT) {\n      return function (v) {\n        gl.uniform1i(location, v);\n      };\n    }\n    if (type === gl.INT_VEC2) {\n      return function (v) {\n        gl.uniform2iv(location, v);\n      };\n    }\n    if (type === gl.INT_VEC3) {\n      return function (v) {\n        gl.uniform3iv(location, v);\n      };\n    }\n    if (type === gl.INT_VEC4) {\n      return function (v) {\n        gl.uniform4iv(location, v);\n      };\n    }\n    if (type === gl.BOOL) {\n      return function (v) {\n        gl.uniform1iv(location, v);\n      };\n    }\n    if (type === gl.BOOL_VEC2) {\n      return function (v) {\n        gl.uniform2iv(location, v);\n      };\n    }\n    if (type === gl.BOOL_VEC3) {\n      return function (v) {\n        gl.uniform3iv(location, v);\n      };\n    }\n    if (type === gl.BOOL_VEC4) {\n      return function (v) {\n        gl.uniform4iv(location, v);\n      };\n    }\n    if (type === gl.FLOAT_MAT2) {\n      return function (v) {\n        gl.uniformMatrix2fv(location, false, v);\n      };\n    }\n    if (type === gl.FLOAT_MAT3) {\n      return function (v) {\n        gl.uniformMatrix3fv(location, false, v);\n      };\n    }\n    if (type === gl.FLOAT_MAT4) {\n      return function (v) {\n        gl.uniformMatrix4fv(location, false, v);\n      };\n    }\n  }\n  const uniformSetters = {};\n  const textureSetters = {};\n  const numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n  for (let ii = 0; ii < numUniforms; ++ii) {\n    const uniformInfo = gl.getActiveUniform(program, ii);\n    if (!uniformInfo) {\n      break;\n    }\n    let name = uniformInfo.name;\n    if (uniformInfo.type === gl.SAMPLER_2D) {\n      textureSetters[name] = createTextureSetter(program, uniformInfo);\n      continue;\n    }\n\n    if (name.substr(-3) === \"[0]\") {\n      name = name.substr(0, name.length - 3);\n    }\n    if (uniformInfo.size > 1) {\n      for (let i = 0; i < uniformInfo.size; i++) {\n        const obj = {\n          size: uniformInfo.size,\n          type: uniformInfo.type,\n          name: name + `[${i}]`,\n        };\n        uniformSetters[name + `[${i}]`] = createUniformSetter(program, obj);\n      }\n    } else {\n      const setter = createUniformSetter(program, uniformInfo);\n      uniformSetters[name] = setter;\n    }\n  }\n  return { uniformSetters, textureSetters };\n}\n\nclass ProgramInfo {\n  constructor(vs, fs) {\n    this.vs = vs;\n    this.fs = fs;\n    this.VAO = null;\n    this.uniformSetters = null;\n    this.vertexShader = null;\n    this.fragmentShader = null;\n    this.program = null;\n    this.gl = null;\n  }\n  setContext(glContextWrapper) {\n    this.context = glContextWrapper;\n    return this;\n  }\n  createUniformSetters() {\n    const { gl } = this.context;\n    const { uniformSetters, textureSetters } = createUniformSetters(\n      gl,\n      this.program\n    );\n    this.textureSetters = textureSetters;\n    this.uniformSetters = uniformSetters;\n    return this;\n  }\n  compileShaders() {\n    const { gl } = this.context;\n    this.vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(this.vertexShader, this.vs);\n    gl.compileShader(this.vertexShader);\n    if (!gl.getShaderParameter(this.vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error(gl.getShaderInfoLog(this.vertexShader));\n    }\n\n    this.fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(this.fragmentShader, this.fs);\n    gl.compileShader(this.fragmentShader);\n    if (!gl.getShaderParameter(this.fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error(gl.getShaderInfoLog(this.fragmentShader));\n    }\n\n    this.program = gl.createProgram();\n    gl.attachShader(this.program, this.vertexShader);\n    gl.attachShader(this.program, this.fragmentShader);\n    gl.linkProgram(this.program);\n    if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n      throw new Error(gl.getProgramInfoLog(this.program));\n    }\n    return this;\n  }\n  setUniforms(uniforms) {\n    this.context.useProgramInfo(this);\n    Object.keys(uniforms).forEach((name) => {\n      const setter = this.uniformSetters[name];\n      if (setter) setter(uniforms[name]);\n    });\n    return this;\n  }\n  setTextureUniformUnit(name, unit) {\n    this.context.useProgramInfo(this);\n    const setter = this.textureSetters[name];\n    if (setter) setter(unit);\n    return this;\n  }\n}\n\n\n\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/src/programInfo.js?");

/***/ }),

/***/ "./node_modules/graphics/src/render/shaders/default/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/graphics/src/render/shaders/default/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _vert_glsl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vert.glsl */ \"./node_modules/graphics/src/render/shaders/default/vert.glsl\");\n/* harmony import */ var _frag_glsl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./frag.glsl */ \"./node_modules/graphics/src/render/shaders/default/frag.glsl\");\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({vert: _vert_glsl__WEBPACK_IMPORTED_MODULE_0__, frag: _frag_glsl__WEBPACK_IMPORTED_MODULE_1__});\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/src/render/shaders/default/index.js?");

/***/ }),

/***/ "./node_modules/graphics/src/render/shaders/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/graphics/src/render/shaders/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"defaultShaders\": () => (/* reexport safe */ _default__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   \"pointLightShaders\": () => (/* reexport safe */ _pointLight__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _default__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./default */ \"./node_modules/graphics/src/render/shaders/default/index.js\");\n/* harmony import */ var _pointLight__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pointLight */ \"./node_modules/graphics/src/render/shaders/pointLight/index.js\");\n\n\n\n\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/src/render/shaders/index.js?");

/***/ }),

/***/ "./node_modules/graphics/src/render/shaders/pointLight/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/graphics/src/render/shaders/pointLight/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _vert_glsl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vert.glsl */ \"./node_modules/graphics/src/render/shaders/pointLight/vert.glsl\");\n/* harmony import */ var _frag_glsl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./frag.glsl */ \"./node_modules/graphics/src/render/shaders/pointLight/frag.glsl\");\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({vert: _vert_glsl__WEBPACK_IMPORTED_MODULE_0__, frag: _frag_glsl__WEBPACK_IMPORTED_MODULE_1__});\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/src/render/shaders/pointLight/index.js?");

/***/ }),

/***/ "./node_modules/graphics/src/textureInfo.js":
/*!**************************************************!*\
  !*** ./node_modules/graphics/src/textureInfo.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TextureInfo\": () => (/* binding */ TextureInfo),\n/* harmony export */   \"makeImgFromSvgXml\": () => (/* binding */ makeImgFromSvgXml),\n/* harmony export */   \"makeStripeImg\": () => (/* binding */ makeStripeImg)\n/* harmony export */ });\nconst setCanvasSize = (ctx, width, height) => {\n  ctx.canvas.width = width;\n  ctx.canvas.height = height;\n};\n\nconst makeTexture = (gl, ctx) => {\n  const tex = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, tex);\n\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    0,\n    gl.RGBA,\n    gl.RGBA,\n    gl.UNSIGNED_BYTE,\n    ctx.canvas\n  );\n  return tex;\n};\nconst makeStripeTexture = (gl, options) => {\n  options = options || {};\n  var width = options.width || 4;\n  var height = options.height || 4;\n  var color1 = options.color1 || \"rgba(1,0,0,0.1)\";\n  var color2 = options.color2 || \"rgba(1,1,1,0.5)\";\n  const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n  setCanvasSize(ctx, width, height);\n\n  ctx.fillStyle = color1;\n  ctx.fillRect(0, 0, width, height);\n  ctx.fillStyle = color2;\n  ctx.fillRect(0, 0, width, height / 2);\n\n  return makeTexture(gl, ctx);\n};\nconst makeStripeImg = (options) => {\n  options = options || {};\n  var width = options.width || 4;\n  var height = options.height || 4;\n  var color1 = options.color1 || \"rgba(1,0,0,0.5)\";\n  var color2 = options.color2 || \"rgba(0,0,1,1)\";\n  const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n  setCanvasSize(ctx, width, height);\n\n  ctx.fillStyle = color1;\n  ctx.fillRect(0, 0, width, height);\n  ctx.fillStyle = color2;\n  ctx.fillRect(0, 0, width, height / 2);\n\n  return ctx.canvas;\n};\nconst makeImgFromSvgXml = (xml, options = {}) => {\n  const img = document.createElement(\"img\");\n  var svg64 = btoa(xml);\n  var b64Start = \"data:image/svg+xml;base64,\";\n  var image64 = b64Start + svg64;\n  img.src = image64;\n\n  const width = options.width || 100;\n  const height = options.height || 100;\n  const x = options.x || 1;\n  const y = options.y || 50;\n\n  const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n  setCanvasSize(ctx, width, height);\n\n  ctx.drawImage(img, x, y, width, height);\n  ctx.fillStyle = \"rgba(0,0,0,1)\";\n  ctx.fillRect(0, 0, width, height);\n  return ctx.img;\n};\nconst setTextureUnits = (gl, texture, unitNum) => {\n  gl.activeTexture(gl.TEXTURE0 + unitNum);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n};\n\nclass TextureInfo {\n  static makeImgFromSvgXml = makeImgFromSvgXml;\n  constructor(gl) {\n    this.texture = gl.createTexture();\n    this.gl = gl\n  }\n  fromImage(image){\n    const {gl} = this\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        image\n      );\n    return this;\n  }\n  getTexture(){\n    return this.texture\n  }\n}\n\n\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/src/textureInfo.js?");

/***/ }),

/***/ "./node_modules/math/index.js":
/*!************************************!*\
  !*** ./node_modules/math/index.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const AABB = __webpack_require__(/*! ./src/aabb */ \"./node_modules/math/src/aabb.js\")\nconst m3 = __webpack_require__(/*! ./src/m3 */ \"./node_modules/math/src/m3.js\")\nconst m4 = __webpack_require__(/*! ./src/m4 */ \"./node_modules/math/src/m4.js\")\nconst vec3 = __webpack_require__(/*! ./src/vec3 */ \"./node_modules/math/src/vec3.js\")\n\nmodule.exports = {\n    AABB, m3, m4, vec3\n}\n\n//# sourceURL=webpack://perlinnoise/./node_modules/math/index.js?");

/***/ }),

/***/ "./node_modules/math/src/aabb.js":
/*!***************************************!*\
  !*** ./node_modules/math/src/aabb.js ***!
  \***************************************/
/***/ ((module) => {

eval("module.exports = class AABB {\n  constructor(min, max) {\n    this.min = min;\n    this.max = max;\n  }\n};\n\n\n//# sourceURL=webpack://perlinnoise/./node_modules/math/src/aabb.js?");

/***/ }),

/***/ "./node_modules/math/src/m3.js":
/*!*************************************!*\
  !*** ./node_modules/math/src/m3.js ***!
  \*************************************/
/***/ ((module) => {

eval("const m3 = {\n    multiply : function(b, a) {\n        var a00 = a[0 * 3 + 0];\n        var a01 = a[0 * 3 + 1];\n        var a02 = a[0 * 3 + 2];\n        var a10 = a[1 * 3 + 0];\n        var a11 = a[1 * 3 + 1];\n        var a12 = a[1 * 3 + 2];\n        var a20 = a[2 * 3 + 0];\n        var a21 = a[2 * 3 + 1];\n        var a22 = a[2 * 3 + 2];\n        var b00 = b[0 * 3 + 0];\n        var b01 = b[0 * 3 + 1];\n        var b02 = b[0 * 3 + 2];\n        var b10 = b[1 * 3 + 0];\n        var b11 = b[1 * 3 + 1];\n        var b12 = b[1 * 3 + 2];\n        var b20 = b[2 * 3 + 0];\n        var b21 = b[2 * 3 + 1];\n        var b22 = b[2 * 3 + 2];\n    \n        return [\n          b00 * a00 + b01 * a10 + b02 * a20,\n          b00 * a01 + b01 * a11 + b02 * a21,\n          b00 * a02 + b01 * a12 + b02 * a22,\n          b10 * a00 + b11 * a10 + b12 * a20,\n          b10 * a01 + b11 * a11 + b12 * a21,\n          b10 * a02 + b11 * a12 + b12 * a22,\n          b20 * a00 + b21 * a10 + b22 * a20,\n          b20 * a01 + b21 * a11 + b22 * a21,\n          b20 * a02 + b21 * a12 + b22 * a22,\n        ];\n      },\n      xRotation: function(angleInRadians) {\n        var c = Math.cos(angleInRadians);\n        var s = Math.sin(angleInRadians);\n     \n        return [\n          1, 0, 0, \n          0, c, s, \n          0, -s, c\n        ];\n      },\n     \n      yRotation: function(angleInRadians) {\n        var c = Math.cos(angleInRadians);\n        var s = Math.sin(angleInRadians);\n     \n        return [\n          c, 0, -s, \n          0, 1, 0, \n          s, 0, c\n        ];\n      },\n     \n      zRotation: function(angleInRadians) {\n        var c = Math.cos(angleInRadians);\n        var s = Math.sin(angleInRadians);\n     \n        return [\n           c, s, 0, \n          -s, c, 0,\n           0, 0, 1\n        ];\n      },\n      m3Tom4 : function(m){\n        const dst = new Float32Array(16)\n        dst[ 0] = m[0]\n        dst[ 1] = m[1]\n        dst[ 2] = m[2]\n        dst[ 3] = 0\n        dst[ 4] = m[3]\n        dst[ 5] = m[4]\n        dst[ 6] = m[5]\n        dst[ 7] = 0\n        dst[ 8] = m[6]\n        dst[ 9] = m[7]\n        dst[10] = m[8]\n        dst[11] = 0\n        dst[12] = 0\n        dst[13] = 0\n        dst[14] = 0\n        dst[15] = 1\n        return dst\n      },\n      xRotate: function(m, angleInRadians) {\n        return m3.multiply(m, m3.xRotation(angleInRadians));\n      },\n     \n      yRotate: function(m, angleInRadians) {\n        return m3.multiply(m, m3.yRotation(angleInRadians));\n      },\n     \n      zRotate: function(m, angleInRadians) {\n        return m3.multiply(m, m3.zRotation(angleInRadians));\n      },\n      transformPoint : function(m, v, dst) {\n        dst = dst || new Float32Array(3);\n        var v0 = v[0];\n        var v1 = v[1];\n        var v2 = v[2];\n        \n    \n        dst[0] = (v0 * m[0 * 3 + 0] + v1 * m[1 * 3 + 0] + v2 * m[2 * 3 + 0]  ) \n        dst[1] = (v0 * m[0 * 3 + 1] + v1 * m[1 * 3 + 1] + v2 * m[2 * 3 + 1]  ) \n        dst[2] = (v0 * m[0 * 3 + 2] + v1 * m[1 * 3 + 2] + v2 * m[2 * 3 + 2] ) \n    \n        return dst;\n      },\n      identity : function() {\n        return [\n          1, 0, 0,\n          0, 1, 0,\n          0, 0, 1,\n        ];\n      },\n      transpose : function(m){\n         \n          dst = new Float32Array(9)\n          dst[0] = m[0]\n          dst[1] = m[3]\n          dst[2] = m[6]\n          dst[3] = m[1]\n          dst[4] = m[4]\n          dst[5] = m[7]\n          dst[6] = m[2]\n          dst[7] = m[5]\n          dst[8] = m[8]\n          return dst\n      },\n      scaling : function(sx,sy,sz){\n        return new Float32Array([\n                    sx, 0, 0,\n                    0, sy, 0,\n                    0,  0, sz\n              ])\n      },\n      scale : function(m, sx,sy,sz){\n        return m3.multiply(m, m3.scaling(sx, sy, sz))\n      },\n      /*\n      0 1 2\n      3 4 5\n      6 7 8\n      */\n      inverse : function(m){\n       const det = m[0] * m[4] * m[8] + \n                   m[2] * m[3] * m[7] +\n                   m[1] * m[5] * m[6] -\n                   m[2] * m[4] * m[6] -\n                   m[0] * m[5] * m[7] -\n                   m[8] * m[3] * m[2] \n        const dst = new Float32Array(9)\n        dst[0] = (m[4] * m[8] - m[7] * m[5]) / det\n        dst[1] = (m[3] * m[8] - m[6] * m[5]) / det\n        dst[2] = (m[3] * m[7] - m[6] * m[4]) / det\n        dst[3] = (m[1] * m[8] - m[2] * m[7]) / det\n        dst[4] = (m[0] * m[8] - m[2] * m[6]) / det\n        dst[5] = (m[0] * m[7] - m[1] * m[6]) / det\n        dst[6] = (m[1] * m[5] - m[2] * m[4]) / det\n        dst[7] = (m[0] * m[5] - m[2] * m[3]) / det\n        dst[8] = (m[0] * m[4] - m[1] * m[4]) / det\n        \n      },\n      toString(m){\n        return m.reduce((acc,el,idx) => (idx) % 3 === 0 ? acc += '\\n' + el : acc += ' ' + el )\n      },\n      dot(v1,v2){\n        return v1[0]*v2[0] + v1[1]*v2[1] + v1[2] * v2[2]\n      }\n}\nmodule.exports = m3\n\n//# sourceURL=webpack://perlinnoise/./node_modules/math/src/m3.js?");

/***/ }),

/***/ "./node_modules/math/src/m4.js":
/*!*************************************!*\
  !*** ./node_modules/math/src/m4.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const MatType = Float32Array;\nconst {norm} = __webpack_require__(/*! ./vec3 */ \"./node_modules/math/src/vec3.js\")\nconst m4 = {\n  multiply: function (a, b, dst) {\n    dst = dst || new MatType(16);\n    var a00 = a[0 * 4 + 0];\n    var a01 = a[0 * 4 + 1];\n    var a02 = a[0 * 4 + 2];\n    var a03 = a[0 * 4 + 3];\n    var a10 = a[1 * 4 + 0];\n    var a11 = a[1 * 4 + 1];\n    var a12 = a[1 * 4 + 2];\n    var a13 = a[1 * 4 + 3];\n    var a20 = a[2 * 4 + 0];\n    var a21 = a[2 * 4 + 1];\n    var a22 = a[2 * 4 + 2];\n    var a23 = a[2 * 4 + 3];\n    var a30 = a[3 * 4 + 0];\n    var a31 = a[3 * 4 + 1];\n    var a32 = a[3 * 4 + 2];\n    var a33 = a[3 * 4 + 3];\n    var b00 = b[0 * 4 + 0];\n    var b01 = b[0 * 4 + 1];\n    var b02 = b[0 * 4 + 2];\n    var b03 = b[0 * 4 + 3];\n    var b10 = b[1 * 4 + 0];\n    var b11 = b[1 * 4 + 1];\n    var b12 = b[1 * 4 + 2];\n    var b13 = b[1 * 4 + 3];\n    var b20 = b[2 * 4 + 0];\n    var b21 = b[2 * 4 + 1];\n    var b22 = b[2 * 4 + 2];\n    var b23 = b[2 * 4 + 3];\n    var b30 = b[3 * 4 + 0];\n    var b31 = b[3 * 4 + 1];\n    var b32 = b[3 * 4 + 2];\n    var b33 = b[3 * 4 + 3];\n    dst[0] = b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30;\n    dst[1] = b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31;\n    dst[2] = b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32;\n    dst[3] = b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33;\n    dst[4] = b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30;\n    dst[5] = b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31;\n    dst[6] = b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32;\n    dst[7] = b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33;\n    dst[8] = b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30;\n    dst[9] = b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31;\n    dst[10] = b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32;\n    dst[11] = b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33;\n    dst[12] = b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30;\n    dst[13] = b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31;\n    dst[14] = b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32;\n    dst[15] = b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33;\n    return dst;\n  },\n\n  translation: function (tx, ty, tz) {\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1];\n  },\n\n  xRotation: function (angleInRadians) {\n    var c = Math.cos(angleInRadians);\n    var s = Math.sin(angleInRadians);\n\n    return [1, 0, 0, 0, 0, c, s, 0, 0, -s, c, 0, 0, 0, 0, 1];\n  },\n\n  yRotation: function (angleInRadians) {\n    var c = Math.cos(angleInRadians);\n    var s = Math.sin(angleInRadians);\n\n    return [c, 0, -s, 0, 0, 1, 0, 0, s, 0, c, 0, 0, 0, 0, 1];\n  },\n\n  zRotation: function (angleInRadians) {\n    var c = Math.cos(angleInRadians);\n    var s = Math.sin(angleInRadians);\n\n    return [c, s, 0, 0, -s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n  },\n\n  scaling: function (sx, sy, sz) {\n    return [sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1];\n  },\n  translate: function (m, tx, ty, tz) {\n    return m4.multiply(m, m4.translation(tx, ty, tz));\n  },\n\n  xRotate: function (m, angleInRadians) {\n    return m4.multiply(m, m4.xRotation(angleInRadians));\n  },\n\n  yRotate: function (m, angleInRadians) {\n    return m4.multiply(m, m4.yRotation(angleInRadians));\n  },\n\n  zRotate: function (m, angleInRadians) {\n    return m4.multiply(m, m4.zRotation(angleInRadians));\n  },\n\n  scale: function (m, sx, sy, sz) {\n    return m4.multiply(m, m4.scaling(sx, sy, sz));\n  },\n  makeOrt: function (v) {\n    const o = [0, 0, 0];\n    const norm = Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n    o[0] = v[0] / norm;\n    o[1] = v[1] / norm;\n    o[2] = v[2] / norm;\n    return o;\n  },\n  projection: function (width, height, depth) {\n    // Эта матрица переворачивает Y, чтобы 0 был наверху\n    return [\n      2 / width,\n      0,\n      0,\n      0,\n      0,\n      -2 / height,\n      0,\n      0,\n      0,\n      0,\n      2 / depth,\n      0,\n      -1,\n      1,\n      0,\n      1,\n    ];\n  },\n  perspective: function (fieldOfViewInRadians, aspect, near, far) {\n    var f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewInRadians);\n    var rangeInv = 1.0 / (near - far);\n\n    return [\n      f / aspect,\n      0,\n      0,\n      0,\n      0,\n      f,\n      0,\n      0,\n      0,\n      0,\n      (near + far) * rangeInv,\n      -1,\n      0,\n      0,\n      near * far * rangeInv * 2,\n      0,\n    ];\n  },\n  inverse: function (m) {\n    var m00 = m[0 * 4 + 0];\n    var m01 = m[0 * 4 + 1];\n    var m02 = m[0 * 4 + 2];\n    var m03 = m[0 * 4 + 3];\n    var m10 = m[1 * 4 + 0];\n    var m11 = m[1 * 4 + 1];\n    var m12 = m[1 * 4 + 2];\n    var m13 = m[1 * 4 + 3];\n    var m20 = m[2 * 4 + 0];\n    var m21 = m[2 * 4 + 1];\n    var m22 = m[2 * 4 + 2];\n    var m23 = m[2 * 4 + 3];\n    var m30 = m[3 * 4 + 0];\n    var m31 = m[3 * 4 + 1];\n    var m32 = m[3 * 4 + 2];\n    var m33 = m[3 * 4 + 3];\n    var tmp_0 = m22 * m33;\n    var tmp_1 = m32 * m23;\n    var tmp_2 = m12 * m33;\n    var tmp_3 = m32 * m13;\n    var tmp_4 = m12 * m23;\n    var tmp_5 = m22 * m13;\n    var tmp_6 = m02 * m33;\n    var tmp_7 = m32 * m03;\n    var tmp_8 = m02 * m23;\n    var tmp_9 = m22 * m03;\n    var tmp_10 = m02 * m13;\n    var tmp_11 = m12 * m03;\n    var tmp_12 = m20 * m31;\n    var tmp_13 = m30 * m21;\n    var tmp_14 = m10 * m31;\n    var tmp_15 = m30 * m11;\n    var tmp_16 = m10 * m21;\n    var tmp_17 = m20 * m11;\n    var tmp_18 = m00 * m31;\n    var tmp_19 = m30 * m01;\n    var tmp_20 = m00 * m21;\n    var tmp_21 = m20 * m01;\n    var tmp_22 = m00 * m11;\n    var tmp_23 = m10 * m01;\n\n    var t0 =\n      tmp_0 * m11 +\n      tmp_3 * m21 +\n      tmp_4 * m31 -\n      (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n    var t1 =\n      tmp_1 * m01 +\n      tmp_6 * m21 +\n      tmp_9 * m31 -\n      (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n    var t2 =\n      tmp_2 * m01 +\n      tmp_7 * m11 +\n      tmp_10 * m31 -\n      (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n    var t3 =\n      tmp_5 * m01 +\n      tmp_8 * m11 +\n      tmp_11 * m21 -\n      (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n\n    var d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n\n    return [\n      d * t0,\n      d * t1,\n      d * t2,\n      d * t3,\n      d *\n        (tmp_1 * m10 +\n          tmp_2 * m20 +\n          tmp_5 * m30 -\n          (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30)),\n      d *\n        (tmp_0 * m00 +\n          tmp_7 * m20 +\n          tmp_8 * m30 -\n          (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30)),\n      d *\n        (tmp_3 * m00 +\n          tmp_6 * m10 +\n          tmp_11 * m30 -\n          (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30)),\n      d *\n        (tmp_4 * m00 +\n          tmp_9 * m10 +\n          tmp_10 * m20 -\n          (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20)),\n      d *\n        (tmp_12 * m13 +\n          tmp_15 * m23 +\n          tmp_16 * m33 -\n          (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33)),\n      d *\n        (tmp_13 * m03 +\n          tmp_18 * m23 +\n          tmp_21 * m33 -\n          (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33)),\n      d *\n        (tmp_14 * m03 +\n          tmp_19 * m13 +\n          tmp_22 * m33 -\n          (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33)),\n      d *\n        (tmp_17 * m03 +\n          tmp_20 * m13 +\n          tmp_23 * m23 -\n          (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23)),\n      d *\n        (tmp_14 * m22 +\n          tmp_17 * m32 +\n          tmp_13 * m12 -\n          (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22)),\n      d *\n        (tmp_20 * m32 +\n          tmp_12 * m02 +\n          tmp_19 * m22 -\n          (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02)),\n      d *\n        (tmp_18 * m12 +\n          tmp_23 * m32 +\n          tmp_15 * m02 -\n          (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12)),\n      d *\n        (tmp_22 * m22 +\n          tmp_16 * m02 +\n          tmp_21 * m12 -\n          (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02)),\n    ];\n  },\n  lookAt: function (cameraPosition, target, up) {\n    var zAxis = normalize(subtractVectors(cameraPosition, target));\n    var xAxis = normalize(cross(up, zAxis));\n    var yAxis = normalize(cross(zAxis, xAxis));\n\n    return [\n      xAxis[0],\n      xAxis[1],\n      xAxis[2],\n      0,\n      yAxis[0],\n      yAxis[1],\n      yAxis[2],\n      0,\n      zAxis[0],\n      zAxis[1],\n      zAxis[2],\n      0,\n      cameraPosition[0],\n      cameraPosition[1],\n      cameraPosition[2],\n      1,\n    ];\n  },\n  copy: function (src) {\n    const dst = new MatType(16);\n\n    dst[0] = src[0];\n    dst[1] = src[1];\n    dst[2] = src[2];\n    dst[3] = src[3];\n    dst[4] = src[4];\n    dst[5] = src[5];\n    dst[6] = src[6];\n    dst[7] = src[7];\n    dst[8] = src[8];\n    dst[9] = src[9];\n    dst[10] = src[10];\n    dst[11] = src[11];\n    dst[12] = src[12];\n    dst[13] = src[13];\n    dst[14] = src[14];\n    dst[15] = src[15];\n\n    return dst;\n  },\n  vectorSum: function (v1, v2) {\n    const vector = [0, 0, 0];\n    vector[0] = v1[0] + v2[0];\n    vector[1] = v1[1] + v2[1];\n    vector[2] = v1[2] + v2[2];\n    return vector;\n  },\n  cross: function (a, b) {\n    return [\n      a[1] * b[2] - a[2] * b[1],\n      a[2] * b[0] - a[0] * b[2],\n      a[0] * b[1] - a[1] * b[0],\n    ];\n  },\n  vectorScalarProduct(a, s) {\n    let v = [0, 0, 0];\n\n    v[0] = a[0] * s;\n    v[1] = a[1] * s;\n    v[2] = a[2] * s;\n    if (isNaN(v[0]) || isNaN(v[2]) || isNaN(v[2])) return [0, 0, 0];\n    return v;\n  },\n\n  scalarProduct: function (v1, v2) {\n    let a = v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\n\n    return a;\n  },\n  dot(v1, v2) {\n    return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\n  },\n  isNullVector: function (v) {\n    return !v[0] && !v[1] && !v[2];\n  },\n  getVectorLength(v) {\n    return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n  },\n  transformPoint: function (m, v, dst) {\n    dst = dst || new MatType(3);\n    var v0 = v[0];\n    var v1 = v[1];\n    var v2 = v[2];\n    var d =\n      v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n\n    dst[0] =\n      (v0 * m[0 * 4 + 0] +\n        v1 * m[1 * 4 + 0] +\n        v2 * m[2 * 4 + 0] +\n        m[3 * 4 + 0]) /\n      d;\n    dst[1] =\n      (v0 * m[0 * 4 + 1] +\n        v1 * m[1 * 4 + 1] +\n        v2 * m[2 * 4 + 1] +\n        m[3 * 4 + 1]) /\n      d;\n    dst[2] =\n      (v0 * m[0 * 4 + 2] +\n        v1 * m[1 * 4 + 2] +\n        v2 * m[2 * 4 + 2] +\n        m[3 * 4 + 2]) /\n      d;\n\n    return dst;\n  },\n  normalize: function (v, dst) {\n    dst = dst || new MatType(3);\n    var length = Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n    // make sure we don't divide by 0.\n    if (length > 0.00001) {\n      dst[0] = v[0] / length;\n      dst[1] = v[1] / length;\n      dst[2] = v[2] / length;\n    }\n    return dst;\n  },\n  identity: function () {\n    dst = new MatType(16);\n    dst[0] = 1;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = 1;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n\n    return dst;\n  },\n  m3Tom4: function (m) {\n    const dst = new MatType(16);\n    dst[0] = m[0];\n    dst[1] = m[1];\n    dst[2] = m[2];\n    dst[3] = 0;\n    dst[4] = m[3];\n    dst[5] = m[4];\n    dst[6] = m[5];\n    dst[7] = 0;\n    dst[8] = m[6];\n    dst[9] = m[7];\n    dst[10] = m[8];\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n  },\n  m4Tom3: function (m) {\n    const dst = new MatType(9);\n    dst[0] = m[0];\n    dst[1] = m[1];\n    dst[2] = m[2];\n    dst[3] = m[4];\n    dst[4] = m[5];\n    dst[5] = m[6];\n    dst[6] = m[8];\n    dst[7] = m[9];\n    dst[8] = m[10];\n    return dst;\n  },\n  toString(m) {\n    return m.reduce((acc, el, idx) =>\n      idx % 4 === 0 ? (acc += \"\\n\" + el) : (acc += \" \" + el)\n    );\n  },\n  transpose: function (m) {\n    return [\n      m[0],\n      m[4],\n      m[8],\n      m[12],\n      m[1],\n      m[5],\n      m[9],\n      m[13],\n      m[2],\n      m[6],\n      m[10],\n      m[14],\n      m[3],\n      m[7],\n      m[11],\n      m[15],\n    ];\n  },\n  fromQuaternion: (q) => {\n    const a11 = 1 - 2 * (q[1] * q[1] + q[2] * q[2]);\n    const a12 = 2 * (q[0] * q[1] - q[2] * q[3]);\n    const a13 = 2 * (q[0] * q[2] + q[1] * q[3]);\n    const a21 = 2 * (q[0] * q[1] + q[2] * q[3]);\n    const a22 = 1 - 2 * (q[0] * q[0] + q[2] * q[2]);\n    const a23 = 2 * (q[1] * q[2] - q[0] * q[3]);\n    const a31 = 2 * (q[0] * q[2] - q[1] * q[3]);\n    const a32 = 2 * (q[1] * q[2] + q[0] * q[3]);\n    const a33 = 1 - 2 * (q[0] * q[0] + q[1] * q[1]);\n    return [a11, a12, a13, 0, a21, a22, a23, 0, a31, a32, a33, 0, 0, 0, 0, 1];\n  },\n  rotation(x, y, z) {\n    return this.xRotate(this.yRotate(this.zRotation(z), y), x);\n  },\n  rotationFromNormal(n) {\n    return this.rotation(Math.acos(n[1]), Math.acos(n[2]), Math.acos(n[0]));\n  },\n  determinate(m) {\n    var m00 = m[0 * 4 + 0];\n    var m01 = m[0 * 4 + 1];\n    var m02 = m[0 * 4 + 2];\n    var m03 = m[0 * 4 + 3];\n    var m10 = m[1 * 4 + 0];\n    var m11 = m[1 * 4 + 1];\n    var m12 = m[1 * 4 + 2];\n    var m13 = m[1 * 4 + 3];\n    var m20 = m[2 * 4 + 0];\n    var m21 = m[2 * 4 + 1];\n    var m22 = m[2 * 4 + 2];\n    var m23 = m[2 * 4 + 3];\n    var m30 = m[3 * 4 + 0];\n    var m31 = m[3 * 4 + 1];\n    var m32 = m[3 * 4 + 2];\n    var m33 = m[3 * 4 + 3];\n    var tmp_0  = m22 * m33;\n    var tmp_1  = m32 * m23;\n    var tmp_2  = m12 * m33;\n    var tmp_3  = m32 * m13;\n    var tmp_4  = m12 * m23;\n    var tmp_5  = m22 * m13;\n    var tmp_6  = m02 * m33;\n    var tmp_7  = m32 * m03;\n    var tmp_8  = m02 * m23;\n    var tmp_9  = m22 * m03;\n    var tmp_10 = m02 * m13;\n    var tmp_11 = m12 * m03;\n\n    var t0 = (tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31) -\n        (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n    var t1 = (tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31) -\n        (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n    var t2 = (tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31) -\n        (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n    var t3 = (tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21) -\n        (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n\n    return 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n  },\n  \n  decompose(mat) {\n    let sx = norm(mat.slice(0, 3));\n    const sy = norm(mat.slice(4, 7));\n    const sz = norm(mat.slice(8, 11));\n\n    \n    const det = this.determinate(mat);\n    if (det < 0) {\n      sx = -sx;\n    }\n    const translation = []\n    const scale = []\n    const Rmatrix = [...mat]\n    translation[0] = mat[12];\n    translation[1] = mat[13];\n    translation[2] = mat[14];\n\n\n    \n\n    const invSX = 1 / sx;\n    const invSY = 1 / sy;\n    const invSZ = 1 / sz;\n\n    Rmatrix[0] *= invSX;\n    Rmatrix[1] *= invSX;\n    Rmatrix[2] *= invSX;\n\n    Rmatrix[4] *= invSY;\n    Rmatrix[5] *= invSY;\n    Rmatrix[6] *= invSY;\n\n    Rmatrix[8] *= invSZ;\n    Rmatrix[9] *= invSZ;\n    Rmatrix[10] *= invSZ;\n\n\n\n    scale[0] = sx;\n    scale[1] = sy;\n    scale[2] = sz;\n    return {translation, Rmatrix, scale }\n  }\n};\n\n\nmodule.exports = m4;\n\n\n//# sourceURL=webpack://perlinnoise/./node_modules/math/src/m4.js?");

/***/ }),

/***/ "./node_modules/math/src/vec3.js":
/*!***************************************!*\
  !*** ./node_modules/math/src/vec3.js ***!
  \***************************************/
/***/ ((module) => {

eval("const dot = (a, b) => a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\nconst cross = (a, b) => [\n  a[1] * b[2] - b[1] * a[2],\n  a[2] * b[0] - b[2] * a[0],\n  a[0] * b[1] - b[0] * a[1],\n];\n\nconst scale = (a, scalar) => [a[0] * scalar, a[1] * scalar, a[2] * scalar];\nconst sum = (a, b) => [a[0] + b[0], a[1] + b[1], a[2] + b[2]];\nconst diff = (a, b) => [a[0] - b[0], a[1] - b[1], a[2] - b[2]];\nconst norm = (a) => Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\nconst normSq = (a) => a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\nconst normalize = (a) => {\n  const length = norm(a);\n  if (length === 0) return a;\n  return [a[0] / length, a[1] / length, a[2] / length];\n};\nconst isNull = (a) => a[0] * a[0] + a[1] * a[1] + a[2] * a[2] === 0;\n\nconst isEqual = (a, b) => a[0] == b[0] && a[1] == b[1] && a[2] == b[2];\n\nmodule.exports = {\n  sum,\n  diff,\n  scale,\n  dot,\n  cross,\n  norm,\n  normSq,\n  normalize,\n  isEqual,\n  isNull,\n};\n\n\n//# sourceURL=webpack://perlinnoise/./node_modules/math/src/vec3.js?");

/***/ }),

/***/ "./src/chunkLoader.js":
/*!****************************!*\
  !*** ./src/chunkLoader.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ChunkLoader)\n/* harmony export */ });\n\r\nconst set1 = [\r\n    [0, 0],\r\n    [1,1],\r\n    [0,1],\r\n    [-1,1],\r\n    [1,0],\r\n    [1,-1],\r\n    [0, -1],\r\n    [-1,-1],\r\n    [-1,0]\r\n]\r\n\r\nclass ChunkLoader{\r\n    constructor(surfaceMesh){\r\n        this.surfaceMesh = surfaceMesh\r\n        this.chunkSize = surfaceMesh.chunkSize\r\n        this.active = new Set\r\n        this.dist = 6\r\n        this.lastX = 0\r\n        this.lastZ = 0\r\n    }\r\n    update(x,z){\r\n\r\n        const {active, dist, surfaceMesh, chunkSize} = this\r\n        this.lastX = Math.floor(x)\r\n        this.lastZ = Math.floor(z)\r\n        for(const offset of set1){\r\n  \r\n            const chunk = surfaceMesh.getChunk(x + offset[0], z+ offset[1])\r\n            active.add(chunk)\r\n        }\r\n        for(const chunk of active){\r\n            \r\n            if(Math.abs(chunk.x - x)> 2 || Math.abs(chunk.z - z) > 3 )\r\n                active.delete(chunk)\r\n        }\r\n    }\r\n    tick(x,z){\r\n        const {chunkSize, lastX, lastZ} = this\r\n       \r\n        const _x = Math.floor(x/chunkSize) \r\n        const _z = Math.floor(z/chunkSize) \r\n        if(_x != lastX || _z !=lastZ)\r\n            this.update(_x, _z)\r\n    }   \r\n}\n\n//# sourceURL=webpack://perlinnoise/./src/chunkLoader.js?");

/***/ }),

/***/ "./src/dualContour/index.js":
/*!**********************************!*\
  !*** ./src/dualContour/index.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../settings */ \"./src/settings.js\");\n\r\nconsole.log(_settings__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\r\nconst { ADAPTIVE, XMIN, XMAX, YMIN, YMAX, ZMIN, ZMAX } = _settings__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\r\n\r\nconst flip = (arr, swap = true) => {\r\n  if (!swap) return arr;\r\n  return arr.map((_, i) => arr.at(-i));\r\n};\r\nconst isInside = (x,y,z, f) =>\r\n  f(x,y,z) !=0 &&\r\n  f(x,y,z+1) !=0 &&\r\n  f(x,y+1, z+1) !=0\r\n  \r\nconst dual_contour_3d_find_best_vertex = (f, f_normal, x, y, z, step = 1) => {\r\n\r\n  if (!ADAPTIVE) {\r\n    //if(f(x , y , z )<=0) return null\r\n    return [x + step*0.5, y + step*0.5, z + step*0.5];\r\n  \r\n  }\r\n\r\n  // Evaluate f at each corner\r\n  v = [\r\n    [[], []],\r\n    [[], []],\r\n    [[], []],\r\n    [[], []],\r\n  ];\r\n  for (let dx = 0; dx < 1; dx++)\r\n    for (let dy = 0; dy < 1; dy++)\r\n      for (let dz = 0; dz < 1; dz++)\r\n        v[(dx, dy, dz)] = f(x + dx, y + dy, z + dz);\r\n  console.log(v)\r\n  //# For each edge, identify where there is a sign change.\r\n  //# There are 4 edges along each of the three axes\r\n  changes = [];\r\n  for (let dx = 0; dx < 1; dx++)\r\n    for (let dy = 0; dy < 1; dy++)\r\n      if (v[(dx, dy, 0)] > 0 != v[(dx, dy, 1)] > 0)\r\n        changes.append(\r\n          (x + dx, y + dy, z + adapt(v[(dx, dy, 0)], v[(dx, dy, 1)]))\r\n        );\r\n\r\n  for (let dx = 0; dx < 1; dx++)\r\n    for (let dz = 0; dz < 1; dz++)\r\n      if (v[(dx, 0, dz)] > 0 != v[(dx, 1, dz)] > 0)\r\n        changes.append(\r\n          (x + dx, y + adapt(v[(dx, 0, dz)], v[(dx, 1, dz)]), z + dz)\r\n        );\r\n\r\n  for (let dy = 0; dy < 1; dy++)\r\n    for (let dz = 0; dz < 1; dz++)\r\n      if (v[(0, dy, dz)] > 0 != v[(1, dy, dz)] > 0)\r\n        changes.append(\r\n          (x + adapt(v[(0, dy, dz)], v[(1, dy, dz)]), y + dy, z + dz)\r\n        );\r\n\r\n  if (changes.length <= 1) return null;\r\n\r\n  //# For each sign change location v[i], we find the normal n[i].\r\n  //# The error term we are trying to minimize is sum( dot(x-v[i], n[i]) ^ 2)\r\n\r\n  //# In other words, minimize || A * x - b || ^2 where A and b are a matrix and vector\r\n  //# derived from v and n\r\n\r\n  normals = [];\r\n  for (const v of changes) {\r\n    n = f_normal(v[0], v[1], v[2]);\r\n    normals.push([n.x, n.y, n.z]);\r\n  }\r\n\r\n  return solve_qef_3d(x, y, z, changes, normals);\r\n};\r\nconst dual_contour_3d = (\r\n  f,\r\n  f_normal,\r\n  \r\n  xmin = XMIN,\r\n  xmax = XMAX,\r\n  ymin = YMIN,\r\n  ymax = YMAX,\r\n  zmin = ZMIN,\r\n  zmax = ZMAX,\r\n  step = 1\r\n) => {\r\n  /*Iterates over a cells of size one between the specified range, and evaluates f and f_normal to produce\r\n    a boundary by Dual Contouring. Returns a Mesh object.*/\r\n  //# For each cell, find the the best vertex for fitting f\r\n  const positions = [];\r\n  const vertIndicesMap = {};\r\n  const normals = []\r\n  for (let x = xmin; x < xmax; x+=step)\r\n    for (let y = ymin; y < ymax; y+=step)\r\n      for (let z = zmin; z < zmax; z+=step) {\r\n        \r\n        const vert = dual_contour_3d_find_best_vertex(f, f_normal, x, y, z, step);\r\n        if (!vert) continue;\r\n        positions.push(...vert);\r\n        normals.push(...f_normal(x,y,z))\r\n        vertIndicesMap[`${x}_${y}_${z}`] = positions.length/3-1;\r\n      }\r\n\r\n  //# For each cell edge, emit an face between the center of the adjacent cells if it is a sign changing edge\r\n  const indices = [];\r\n  for (let x = xmin; x < xmax; x+=step)\r\n    for (let y = ymin; y < ymax; y+=step)\r\n      for (let z = ymin; z < zmax; z+=step) {\r\n        if (x > xmin && y > ymin) {\r\n          const solid1 = f(x, y, z + 0) > 0;\r\n          const solid2 = f(x, y, z +step) > 0;\r\n          if (solid1 != solid2) {\r\n            indices.push(\r\n              ...flip(\r\n                [\r\n                  vertIndicesMap[`${x - step}_${y - step}_${z}`],\r\n                  vertIndicesMap[`${x - 0}_${y - step}_${z}`],\r\n                  vertIndicesMap[`${x - 0}_${y - 0}_${z}`],\r\n                ],\r\n                solid2\r\n              ),\r\n              ...flip(\r\n                [\r\n                  vertIndicesMap[`${x - step}_${y - step}_${z}`],\r\n                  vertIndicesMap[`${x - 0}_${y - 0}_${z}`],\r\n                  vertIndicesMap[`${x - step}_${y - 0}_${z}`],\r\n                ],\r\n                solid2\r\n              )\r\n            );\r\n          }\r\n        }\r\n\r\n        if (x > xmin && z > zmin) {\r\n          const solid1 = f(x, y + 0, z) > 0;\r\n          const solid2 = f(x, y + step, z) > 0;\r\n          if (solid1 != solid2)\r\n            indices.push(\r\n              ...flip(\r\n                [\r\n                  vertIndicesMap[`${x - step}_${y}_${z - step}`],\r\n                  vertIndicesMap[`${x - 0}_${y}_${z - step}`],\r\n                  vertIndicesMap[`${x - 0}_${y}_${z - 0}`],\r\n                ],\r\n                solid1\r\n              ),\r\n              ...flip(\r\n                [\r\n                  vertIndicesMap[`${x - step}_${y}_${z - step}`],\r\n                  vertIndicesMap[`${x - 0}_${y}_${z - 0}`],\r\n                  vertIndicesMap[`${x - step}_${y}_${z - 0}`],\r\n                ],\r\n                solid1\r\n              )\r\n            );\r\n        }\r\n\r\n        if (y > ymin && z > zmin) {\r\n          const solid1 = f(x + 0, y, z) > 0;\r\n          const solid2 = f(x + step, y, z) > 0;\r\n          if (solid1 != solid2)\r\n            indices.push(\r\n              ...flip(\r\n                [\r\n                  vertIndicesMap[`${x}_${y - step}_${z - step}`],\r\n                  vertIndicesMap[`${x}_${y - 0}_${z - step}`],\r\n                  vertIndicesMap[`${x}_${y - 0}_${z - 0}`],\r\n                ],\r\n                solid2\r\n              ),\r\n              ...flip(\r\n                [\r\n                  vertIndicesMap[`${x}_${y - step}_${z - step}`],\r\n                  vertIndicesMap[`${x}_${y - 0}_${z - 0}`],\r\n                  vertIndicesMap[`${x}_${y - step}_${z - 0}`],\r\n                ],\r\n                solid2\r\n              )\r\n            );\r\n        }\r\n      }\r\n\r\n  return {positions, indices, normals};\r\n};\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dual_contour_3d);\n\n//# sourceURL=webpack://perlinnoise/./src/dualContour/index.js?");

/***/ }),

/***/ "./src/marchingCubes/cases.js":
/*!************************************!*\
  !*** ./src/marchingCubes/cases.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([[],\r\n [[8, 0, 3]],\r\n [[1, 0, 9]],\r\n [[8, 1, 3], [8, 9, 1]],\r\n [[10, 2, 1]],\r\n [[8, 0, 3], [1, 10, 2]],\r\n [[9, 2, 0], [9, 10, 2]],\r\n [[3, 8, 2], [2, 8, 10], [10, 8, 9]],\r\n [[3, 2, 11]],\r\n [[0, 2, 8], [2, 11, 8]],\r\n [[1, 0, 9], [2, 11, 3]],\r\n [[2, 9, 1], [11, 9, 2], [8, 9, 11]],\r\n [[3, 10, 11], [3, 1, 10]],\r\n [[1, 10, 0], [0, 10, 8], [8, 10, 11]],\r\n [[0, 11, 3], [9, 11, 0], [10, 11, 9]],\r\n [[8, 9, 11], [11, 9, 10]],\r\n [[7, 4, 8]],\r\n [[3, 7, 0], [7, 4, 0]],\r\n [[7, 4, 8], [9, 1, 0]],\r\n [[9, 1, 4], [4, 1, 7], [7, 1, 3]],\r\n [[7, 4, 8], [2, 1, 10]],\r\n [[4, 3, 7], [4, 0, 3], [2, 1, 10]],\r\n [[2, 0, 10], [0, 9, 10], [7, 4, 8]],\r\n [[9, 10, 4], [4, 10, 3], [3, 10, 2], [4, 3, 7]],\r\n [[4, 8, 7], [3, 2, 11]],\r\n [[7, 4, 11], [11, 4, 2], [2, 4, 0]],\r\n [[1, 0, 9], [2, 11, 3], [8, 7, 4]],\r\n [[2, 11, 1], [1, 11, 9], [9, 11, 7], [9, 7, 4]],\r\n [[10, 11, 1], [11, 3, 1], [4, 8, 7]],\r\n [[4, 0, 7], [7, 0, 10], [0, 1, 10], [7, 10, 11]],\r\n [[7, 4, 8], [0, 11, 3], [9, 11, 0], [10, 11, 9]],\r\n [[4, 11, 7], [9, 11, 4], [10, 11, 9]],\r\n [[9, 4, 5]],\r\n [[9, 4, 5], [0, 3, 8]],\r\n [[0, 5, 1], [0, 4, 5]],\r\n [[4, 3, 8], [5, 3, 4], [1, 3, 5]],\r\n [[5, 9, 4], [10, 2, 1]],\r\n [[8, 0, 3], [1, 10, 2], [4, 5, 9]],\r\n [[10, 4, 5], [2, 4, 10], [0, 4, 2]],\r\n [[3, 10, 2], [8, 10, 3], [5, 10, 8], [4, 5, 8]],\r\n [[9, 4, 5], [11, 3, 2]],\r\n [[11, 0, 2], [11, 8, 0], [9, 4, 5]],\r\n [[5, 1, 4], [1, 0, 4], [11, 3, 2]],\r\n [[5, 1, 4], [4, 1, 11], [1, 2, 11], [4, 11, 8]],\r\n [[3, 10, 11], [3, 1, 10], [5, 9, 4]],\r\n [[9, 4, 5], [1, 10, 0], [0, 10, 8], [8, 10, 11]],\r\n [[5, 0, 4], [11, 0, 5], [11, 3, 0], [10, 11, 5]],\r\n [[5, 10, 4], [4, 10, 8], [8, 10, 11]],\r\n [[9, 7, 5], [9, 8, 7]],\r\n [[0, 5, 9], [3, 5, 0], [7, 5, 3]],\r\n [[8, 7, 0], [0, 7, 1], [1, 7, 5]],\r\n [[7, 5, 3], [3, 5, 1]],\r\n [[7, 5, 8], [5, 9, 8], [2, 1, 10]],\r\n [[10, 2, 1], [0, 5, 9], [3, 5, 0], [7, 5, 3]],\r\n [[8, 2, 0], [5, 2, 8], [10, 2, 5], [7, 5, 8]],\r\n [[2, 3, 10], [10, 3, 5], [5, 3, 7]],\r\n [[9, 7, 5], [9, 8, 7], [11, 3, 2]],\r\n [[0, 2, 9], [9, 2, 7], [7, 2, 11], [9, 7, 5]],\r\n [[3, 2, 11], [8, 7, 0], [0, 7, 1], [1, 7, 5]],\r\n [[11, 1, 2], [7, 1, 11], [5, 1, 7]],\r\n [[3, 1, 11], [11, 1, 10], [8, 7, 9], [9, 7, 5]],\r\n [[11, 7, 0], [7, 5, 0], [5, 9, 0], [10, 11, 0], [1, 10, 0]],\r\n [[0, 5, 10], [0, 7, 5], [0, 8, 7], [0, 10, 11], [0, 11, 3]],\r\n [[10, 11, 5], [11, 7, 5]],\r\n [[5, 6, 10]],\r\n [[8, 0, 3], [10, 5, 6]],\r\n [[0, 9, 1], [5, 6, 10]],\r\n [[8, 1, 3], [8, 9, 1], [10, 5, 6]],\r\n [[1, 6, 2], [1, 5, 6]],\r\n [[6, 2, 5], [2, 1, 5], [8, 0, 3]],\r\n [[5, 6, 9], [9, 6, 0], [0, 6, 2]],\r\n [[5, 8, 9], [2, 8, 5], [3, 8, 2], [6, 2, 5]],\r\n [[3, 2, 11], [10, 5, 6]],\r\n [[0, 2, 8], [2, 11, 8], [5, 6, 10]],\r\n [[3, 2, 11], [0, 9, 1], [10, 5, 6]],\r\n [[5, 6, 10], [2, 9, 1], [11, 9, 2], [8, 9, 11]],\r\n [[11, 3, 6], [6, 3, 5], [5, 3, 1]],\r\n [[11, 8, 6], [6, 8, 1], [1, 8, 0], [6, 1, 5]],\r\n [[5, 0, 9], [6, 0, 5], [3, 0, 6], [11, 3, 6]],\r\n [[6, 9, 5], [11, 9, 6], [8, 9, 11]],\r\n [[7, 4, 8], [6, 10, 5]],\r\n [[3, 7, 0], [7, 4, 0], [10, 5, 6]],\r\n [[7, 4, 8], [6, 10, 5], [9, 1, 0]],\r\n [[5, 6, 10], [9, 1, 4], [4, 1, 7], [7, 1, 3]],\r\n [[1, 6, 2], [1, 5, 6], [7, 4, 8]],\r\n [[6, 1, 5], [2, 1, 6], [0, 7, 4], [3, 7, 0]],\r\n [[4, 8, 7], [5, 6, 9], [9, 6, 0], [0, 6, 2]],\r\n [[2, 3, 9], [3, 7, 9], [7, 4, 9], [6, 2, 9], [5, 6, 9]],\r\n [[2, 11, 3], [7, 4, 8], [10, 5, 6]],\r\n [[6, 10, 5], [7, 4, 11], [11, 4, 2], [2, 4, 0]],\r\n [[1, 0, 9], [8, 7, 4], [3, 2, 11], [5, 6, 10]],\r\n [[1, 2, 9], [9, 2, 11], [9, 11, 4], [4, 11, 7], [5, 6, 10]],\r\n [[7, 4, 8], [11, 3, 6], [6, 3, 5], [5, 3, 1]],\r\n [[11, 0, 1], [11, 4, 0], [11, 7, 4], [11, 1, 5], [11, 5, 6]],\r\n [[6, 9, 5], [0, 9, 6], [11, 0, 6], [3, 0, 11], [4, 8, 7]],\r\n [[5, 6, 9], [9, 6, 11], [9, 11, 7], [9, 7, 4]],\r\n [[4, 10, 9], [4, 6, 10]],\r\n [[10, 4, 6], [10, 9, 4], [8, 0, 3]],\r\n [[1, 0, 10], [10, 0, 6], [6, 0, 4]],\r\n [[8, 1, 3], [6, 1, 8], [6, 10, 1], [4, 6, 8]],\r\n [[9, 2, 1], [4, 2, 9], [6, 2, 4]],\r\n [[3, 8, 0], [9, 2, 1], [4, 2, 9], [6, 2, 4]],\r\n [[0, 4, 2], [2, 4, 6]],\r\n [[8, 2, 3], [4, 2, 8], [6, 2, 4]],\r\n [[4, 10, 9], [4, 6, 10], [2, 11, 3]],\r\n [[11, 8, 2], [2, 8, 0], [6, 10, 4], [4, 10, 9]],\r\n [[2, 11, 3], [1, 0, 10], [10, 0, 6], [6, 0, 4]],\r\n [[8, 4, 1], [4, 6, 1], [6, 10, 1], [11, 8, 1], [2, 11, 1]],\r\n [[3, 1, 11], [11, 1, 4], [1, 9, 4], [11, 4, 6]],\r\n [[6, 11, 1], [11, 8, 1], [8, 0, 1], [4, 6, 1], [9, 4, 1]],\r\n [[3, 0, 11], [11, 0, 6], [6, 0, 4]],\r\n [[4, 11, 8], [4, 6, 11]],\r\n [[6, 8, 7], [10, 8, 6], [9, 8, 10]],\r\n [[3, 7, 0], [0, 7, 10], [7, 6, 10], [0, 10, 9]],\r\n [[1, 6, 10], [0, 6, 1], [7, 6, 0], [8, 7, 0]],\r\n [[10, 1, 6], [6, 1, 7], [7, 1, 3]],\r\n [[9, 8, 1], [1, 8, 6], [6, 8, 7], [1, 6, 2]],\r\n [[9, 7, 6], [9, 3, 7], [9, 0, 3], [9, 6, 2], [9, 2, 1]],\r\n [[7, 6, 8], [8, 6, 0], [0, 6, 2]],\r\n [[3, 6, 2], [3, 7, 6]],\r\n [[3, 2, 11], [6, 8, 7], [10, 8, 6], [9, 8, 10]],\r\n [[7, 9, 0], [7, 10, 9], [7, 6, 10], [7, 0, 2], [7, 2, 11]],\r\n [[0, 10, 1], [6, 10, 0], [8, 6, 0], [7, 6, 8], [2, 11, 3]],\r\n [[1, 6, 10], [7, 6, 1], [11, 7, 1], [2, 11, 1]],\r\n [[1, 9, 6], [9, 8, 6], [8, 7, 6], [3, 1, 6], [11, 3, 6]],\r\n [[9, 0, 1], [11, 7, 6]],\r\n [[0, 11, 3], [6, 11, 0], [7, 6, 0], [8, 7, 0]],\r\n [[7, 6, 11]],\r\n [[11, 6, 7]],\r\n [[3, 8, 0], [11, 6, 7]],\r\n [[1, 0, 9], [6, 7, 11]],\r\n [[1, 3, 9], [3, 8, 9], [6, 7, 11]],\r\n [[10, 2, 1], [6, 7, 11]],\r\n [[10, 2, 1], [3, 8, 0], [6, 7, 11]],\r\n [[9, 2, 0], [9, 10, 2], [11, 6, 7]],\r\n [[11, 6, 7], [3, 8, 2], [2, 8, 10], [10, 8, 9]],\r\n [[2, 6, 3], [6, 7, 3]],\r\n [[8, 6, 7], [0, 6, 8], [2, 6, 0]],\r\n [[7, 2, 6], [7, 3, 2], [1, 0, 9]],\r\n [[8, 9, 7], [7, 9, 2], [2, 9, 1], [7, 2, 6]],\r\n [[6, 1, 10], [7, 1, 6], [3, 1, 7]],\r\n [[8, 0, 7], [7, 0, 6], [6, 0, 1], [6, 1, 10]],\r\n [[7, 3, 6], [6, 3, 9], [3, 0, 9], [6, 9, 10]],\r\n [[7, 8, 6], [6, 8, 10], [10, 8, 9]],\r\n [[8, 11, 4], [11, 6, 4]],\r\n [[11, 0, 3], [6, 0, 11], [4, 0, 6]],\r\n [[6, 4, 11], [4, 8, 11], [1, 0, 9]],\r\n [[1, 3, 9], [9, 3, 6], [3, 11, 6], [9, 6, 4]],\r\n [[8, 11, 4], [11, 6, 4], [1, 10, 2]],\r\n [[1, 10, 2], [11, 0, 3], [6, 0, 11], [4, 0, 6]],\r\n [[2, 9, 10], [0, 9, 2], [4, 11, 6], [8, 11, 4]],\r\n [[3, 4, 9], [3, 6, 4], [3, 11, 6], [3, 9, 10], [3, 10, 2]],\r\n [[3, 2, 8], [8, 2, 4], [4, 2, 6]],\r\n [[2, 4, 0], [6, 4, 2]],\r\n [[0, 9, 1], [3, 2, 8], [8, 2, 4], [4, 2, 6]],\r\n [[1, 2, 9], [9, 2, 4], [4, 2, 6]],\r\n [[10, 3, 1], [4, 3, 10], [4, 8, 3], [6, 4, 10]],\r\n [[10, 0, 1], [6, 0, 10], [4, 0, 6]],\r\n [[3, 10, 6], [3, 9, 10], [3, 0, 9], [3, 6, 4], [3, 4, 8]],\r\n [[9, 10, 4], [10, 6, 4]],\r\n [[9, 4, 5], [7, 11, 6]],\r\n [[9, 4, 5], [7, 11, 6], [0, 3, 8]],\r\n [[0, 5, 1], [0, 4, 5], [6, 7, 11]],\r\n [[11, 6, 7], [4, 3, 8], [5, 3, 4], [1, 3, 5]],\r\n [[1, 10, 2], [9, 4, 5], [6, 7, 11]],\r\n [[8, 0, 3], [4, 5, 9], [10, 2, 1], [11, 6, 7]],\r\n [[7, 11, 6], [10, 4, 5], [2, 4, 10], [0, 4, 2]],\r\n [[8, 2, 3], [10, 2, 8], [4, 10, 8], [5, 10, 4], [11, 6, 7]],\r\n [[2, 6, 3], [6, 7, 3], [9, 4, 5]],\r\n [[5, 9, 4], [8, 6, 7], [0, 6, 8], [2, 6, 0]],\r\n [[7, 3, 6], [6, 3, 2], [4, 5, 0], [0, 5, 1]],\r\n [[8, 1, 2], [8, 5, 1], [8, 4, 5], [8, 2, 6], [8, 6, 7]],\r\n [[9, 4, 5], [6, 1, 10], [7, 1, 6], [3, 1, 7]],\r\n [[7, 8, 6], [6, 8, 0], [6, 0, 10], [10, 0, 1], [5, 9, 4]],\r\n [[3, 0, 10], [0, 4, 10], [4, 5, 10], [7, 3, 10], [6, 7, 10]],\r\n [[8, 6, 7], [10, 6, 8], [5, 10, 8], [4, 5, 8]],\r\n [[5, 9, 6], [6, 9, 11], [11, 9, 8]],\r\n [[11, 6, 3], [3, 6, 0], [0, 6, 5], [0, 5, 9]],\r\n [[8, 11, 0], [0, 11, 5], [5, 11, 6], [0, 5, 1]],\r\n [[6, 3, 11], [5, 3, 6], [1, 3, 5]],\r\n [[10, 2, 1], [5, 9, 6], [6, 9, 11], [11, 9, 8]],\r\n [[3, 11, 0], [0, 11, 6], [0, 6, 9], [9, 6, 5], [1, 10, 2]],\r\n [[0, 8, 5], [8, 11, 5], [11, 6, 5], [2, 0, 5], [10, 2, 5]],\r\n [[11, 6, 3], [3, 6, 5], [3, 5, 10], [3, 10, 2]],\r\n [[3, 9, 8], [6, 9, 3], [5, 9, 6], [2, 6, 3]],\r\n [[9, 6, 5], [0, 6, 9], [2, 6, 0]],\r\n [[6, 5, 8], [5, 1, 8], [1, 0, 8], [2, 6, 8], [3, 2, 8]],\r\n [[2, 6, 1], [6, 5, 1]],\r\n [[6, 8, 3], [6, 9, 8], [6, 5, 9], [6, 3, 1], [6, 1, 10]],\r\n [[1, 10, 0], [0, 10, 6], [0, 6, 5], [0, 5, 9]],\r\n [[3, 0, 8], [6, 5, 10]],\r\n [[10, 6, 5]],\r\n [[5, 11, 10], [5, 7, 11]],\r\n [[5, 11, 10], [5, 7, 11], [3, 8, 0]],\r\n [[11, 10, 7], [10, 5, 7], [0, 9, 1]],\r\n [[5, 7, 10], [10, 7, 11], [9, 1, 8], [8, 1, 3]],\r\n [[2, 1, 11], [11, 1, 7], [7, 1, 5]],\r\n [[3, 8, 0], [2, 1, 11], [11, 1, 7], [7, 1, 5]],\r\n [[2, 0, 11], [11, 0, 5], [5, 0, 9], [11, 5, 7]],\r\n [[2, 9, 5], [2, 8, 9], [2, 3, 8], [2, 5, 7], [2, 7, 11]],\r\n [[10, 3, 2], [5, 3, 10], [7, 3, 5]],\r\n [[10, 0, 2], [7, 0, 10], [8, 0, 7], [5, 7, 10]],\r\n [[0, 9, 1], [10, 3, 2], [5, 3, 10], [7, 3, 5]],\r\n [[7, 8, 2], [8, 9, 2], [9, 1, 2], [5, 7, 2], [10, 5, 2]],\r\n [[3, 1, 7], [7, 1, 5]],\r\n [[0, 7, 8], [1, 7, 0], [5, 7, 1]],\r\n [[9, 5, 0], [0, 5, 3], [3, 5, 7]],\r\n [[5, 7, 9], [7, 8, 9]],\r\n [[4, 10, 5], [8, 10, 4], [11, 10, 8]],\r\n [[3, 4, 0], [10, 4, 3], [10, 5, 4], [11, 10, 3]],\r\n [[1, 0, 9], [4, 10, 5], [8, 10, 4], [11, 10, 8]],\r\n [[4, 3, 11], [4, 1, 3], [4, 9, 1], [4, 11, 10], [4, 10, 5]],\r\n [[1, 5, 2], [2, 5, 8], [5, 4, 8], [2, 8, 11]],\r\n [[5, 4, 11], [4, 0, 11], [0, 3, 11], [1, 5, 11], [2, 1, 11]],\r\n [[5, 11, 2], [5, 8, 11], [5, 4, 8], [5, 2, 0], [5, 0, 9]],\r\n [[5, 4, 9], [2, 3, 11]],\r\n [[3, 4, 8], [2, 4, 3], [5, 4, 2], [10, 5, 2]],\r\n [[5, 4, 10], [10, 4, 2], [2, 4, 0]],\r\n [[2, 8, 3], [4, 8, 2], [10, 4, 2], [5, 4, 10], [0, 9, 1]],\r\n [[4, 10, 5], [2, 10, 4], [1, 2, 4], [9, 1, 4]],\r\n [[8, 3, 4], [4, 3, 5], [5, 3, 1]],\r\n [[1, 5, 0], [5, 4, 0]],\r\n [[5, 0, 9], [3, 0, 5], [8, 3, 5], [4, 8, 5]],\r\n [[5, 4, 9]],\r\n [[7, 11, 4], [4, 11, 9], [9, 11, 10]],\r\n [[8, 0, 3], [7, 11, 4], [4, 11, 9], [9, 11, 10]],\r\n [[0, 4, 1], [1, 4, 11], [4, 7, 11], [1, 11, 10]],\r\n [[10, 1, 4], [1, 3, 4], [3, 8, 4], [11, 10, 4], [7, 11, 4]],\r\n [[9, 4, 1], [1, 4, 2], [2, 4, 7], [2, 7, 11]],\r\n [[1, 9, 2], [2, 9, 4], [2, 4, 11], [11, 4, 7], [3, 8, 0]],\r\n [[11, 4, 7], [2, 4, 11], [0, 4, 2]],\r\n [[7, 11, 4], [4, 11, 2], [4, 2, 3], [4, 3, 8]],\r\n [[10, 9, 2], [2, 9, 7], [7, 9, 4], [2, 7, 3]],\r\n [[2, 10, 7], [10, 9, 7], [9, 4, 7], [0, 2, 7], [8, 0, 7]],\r\n [[10, 4, 7], [10, 0, 4], [10, 1, 0], [10, 7, 3], [10, 3, 2]],\r\n [[8, 4, 7], [10, 1, 2]],\r\n [[4, 1, 9], [7, 1, 4], [3, 1, 7]],\r\n [[8, 0, 7], [7, 0, 1], [7, 1, 9], [7, 9, 4]],\r\n [[0, 7, 3], [0, 4, 7]],\r\n [[8, 4, 7]],\r\n [[9, 8, 10], [10, 8, 11]],\r\n [[3, 11, 0], [0, 11, 9], [9, 11, 10]],\r\n [[0, 10, 1], [8, 10, 0], [11, 10, 8]],\r\n [[11, 10, 3], [10, 1, 3]],\r\n [[1, 9, 2], [2, 9, 11], [11, 9, 8]],\r\n [[9, 2, 1], [11, 2, 9], [3, 11, 9], [0, 3, 9]],\r\n [[8, 2, 0], [8, 11, 2]],\r\n [[11, 2, 3]],\r\n [[2, 8, 3], [10, 8, 2], [9, 8, 10]],\r\n [[0, 2, 9], [2, 10, 9]],\r\n [[3, 2, 8], [8, 2, 10], [8, 10, 1], [8, 1, 0]],\r\n [[1, 2, 10]],\r\n [[3, 1, 8], [1, 9, 8]],\r\n [[9, 0, 1]],\r\n [[3, 0, 8]],\r\n []]);\r\n\n\n//# sourceURL=webpack://perlinnoise/./src/marchingCubes/cases.js?");

/***/ }),

/***/ "./src/marchingCubes/index.js":
/*!************************************!*\
  !*** ./src/marchingCubes/index.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _cases__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cases */ \"./src/marchingCubes/cases.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../settings */ \"./src/settings.js\");\n\r\n\r\nconst { XMIN, XMAX, YMIN, YMAX, ZMIN, ZMAX } = _settings__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\n\r\nconsole.log(_settings__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\r\n\r\nconst EDGES = [\r\n  [0, 1],\r\n  [1, 2],\r\n  [2, 3],\r\n  [3, 0],\r\n  [4, 5],\r\n  [5, 6],\r\n  [6, 7],\r\n  [7, 4],\r\n  [0, 4],\r\n  [1, 5],\r\n  [2, 6],\r\n  [3, 7],\r\n];\r\n\r\nconst VERTICES = [\r\n  [0, 0, 0],\r\n  [1, 0, 0],\r\n  [1, 1, 0],\r\n  [0, 1, 0],\r\n  [0, 0, 1],\r\n  [1, 0, 1],\r\n  [1, 1, 1],\r\n  [0, 1, 1],\r\n];\r\n\r\nconst ADAPTIVE = true;\r\n\r\nconst adapt = (v0, v1) => {\r\n  if (ADAPTIVE) return (0 - v0) / (v1 - v0);\r\n  return 0.5;\r\n};\r\n\r\nconst edgeToBoudnary = (edge, x, y, z, fEval) => {\r\n  const [v0, v1] = EDGES[edge];\r\n  const f0 = fEval[v0];\r\n  const f1 = fEval[v1];\r\n\r\n  const t0 = 1 - adapt(f0, f1);\r\n  const t1 = 1 - t0;\r\n  const vertPos0 = VERTICES[v0];\r\n  const vertPos1 = VERTICES[v1];\r\n  return [\r\n    x + vertPos0[0] * t0 + vertPos1[0] * t1,\r\n    y + vertPos0[1] * t0 + vertPos1[1] * t1,\r\n    z + vertPos0[2] * t0 + vertPos1[2] * t1,\r\n  ];\r\n};\r\n\r\nconst singleCell = (f, x, y, z, size = 1) => {\r\n  const fEval = [];\r\n  for (let v = 0; v < 8; v++) {\r\n    const vPos = VERTICES[v];\r\n    fEval.push(f(x + vPos[0] * size, y + vPos[1] * size, z + vPos[2] * size));\r\n  }\r\n  let caseIndex = 0;\r\n  for (let i = 0; i < 8; i++) {\r\n    if (fEval[i] >= 0) caseIndex += 2 ** i;\r\n  }\r\n  const faces = _cases__WEBPACK_IMPORTED_MODULE_0__[\"default\"][caseIndex];\r\n  const positions = [];\r\n  const indices = [];\r\n  const normals = [];\r\n  for (const face of faces) {\r\n    const verts = []; //face.reduce((acc,edge) => acc = [...acc, ...edgeToBoudnary(edge,x,y,z, fEval)], []);\r\n    for (const edge of face) {\r\n      const [v0, v1] = EDGES[edge];\r\n      const f0 = fEval[v0];\r\n      const f1 = fEval[v1];\r\n\r\n      const t0 = 1 - adapt(f0, f1);\r\n      const t1 = 1 - t0;\r\n      const vertPos0 = VERTICES[v0];\r\n      const vertPos1 = VERTICES[v1];\r\n      verts.push(\r\n        x + vertPos0[0] * size * t0 + vertPos1[0] * size * t1,\r\n        y + vertPos0[1] * size * t0 + vertPos1[1] * size * t1,\r\n        z + vertPos0[2] * size * t0 + vertPos1[2] * size * t1\r\n      );\r\n    }\r\n    const index = positions.length / 3 - 1;\r\n    indices.push(index, index + 1, index + 2);\r\n    positions.push(...verts);\r\n  }\r\n  return { positions, indices };\r\n};\r\n\r\nconst marchingCubes = (\r\n  f,\r\n  xmin = XMIN,\r\n  xmax = XMAX,\r\n  ymin = YMIN,\r\n  ymax = YMAX,\r\n  zmin = ZMIN,\r\n  zmax = ZMAX,\r\n  size = 1\r\n) => {\r\n  const positions = [];\r\n  const indices = [];\r\n  for (let x = xmin; x < xmax; x += size)\r\n    for (let y = ymin; y < ymax; y += size)\r\n      for (let z = zmin; z < zmax; z += size) {\r\n        const cell = singleCell(f, x, y, z, size);\r\n        const offset = indices.length;\r\n        positions.push(...cell.positions);\r\n        indices.push(\r\n          cell.indices[0] + offset,\r\n          cell.indices[1] + offset,\r\n          cell.indices[2] + offset\r\n        );\r\n      }\r\n  return { positions, indices };\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (marchingCubes);\r\n\n\n//# sourceURL=webpack://perlinnoise/./src/marchingCubes/index.js?");

/***/ }),

/***/ "./src/perlinnoise.js":
/*!****************************!*\
  !*** ./src/perlinnoise.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Perlin)\n/* harmony export */ });\n\r\nconst dot = (v1, v2) => v1[0] * v2[0] + v1[1] * v2[1]\r\nconst sum = (v1, v2) => [v1[0] + v2[0], v1[1] + v2[1]]\r\nconst diff = (v1, v2) => [v1[0] - v2[0], v1[1] - v2[1]]\r\nconst cross = (v1, v2) =>{\r\n\r\n}\r\nconst scale = (v, fac) => [v[0] * fac, v[1] * fac] \r\nconst interpolate = (a0, a1, w) => (a1 - a0) * ((w * (w * 6.0 - 15.0) + 10.0) * w * w * w) + a0\r\nconst randomGradient = (x, y) =>{\r\n   \r\n    const random = Math.random()* Math.PI  //((x * 10156) ^ (y * 15464)) & 255\r\n    return [Math.cos(random), Math.sin(random)]\r\n}\r\n\r\n\r\nconst quintic = t => t * t * t * (t * (t * 6 - 15) + 10)\r\nclass Perlin{\r\n    constructor(cellSize){\r\n       \r\n        this.cellSize = cellSize\r\n\r\n        this.gradientsMap = new Map()\r\n        this.cache = new Map()\r\n    }\r\n  \r\n    getGradient(x, y){\r\n        const grad = this.gradientsMap.get(`${x}_${y}`)\r\n        \r\n        if(grad) return grad\r\n        const _grad = randomGradient(x, y)\r\n        this.gradientsMap.set(`${x}_${y}`, _grad)\r\n        return _grad\r\n    }\r\n    getCell(x, y){\r\n        const {cellSize} = this\r\n        const v0 = [Math.floor(x/cellSize)* cellSize, Math.floor(y/cellSize)* cellSize]\r\n        const v1 = sum(v0, [cellSize,0])\r\n        const v2 = sum(v0, [cellSize,cellSize])\r\n        const v3 = sum(v0, [0,cellSize])\r\n        return [v0, v1, v2, v3]\r\n    }\r\n    getValue(x, y){\r\n        const val = this.cache.get(`${x}_${y}`)\r\n        if(val) return val\r\n        const {cellSize, gradientsMap} = this\r\n        const [topLeft,topRight, bottomRight, bottomLeft] = this.getCell(x, y)\r\n        const gradientTopLeft = this.getGradient(...topLeft)\r\n        const gradientTopRight =  this.getGradient(...topRight)\r\n        const gradientBottomLeft = this.getGradient(...bottomLeft)\r\n        const gradientBottomRight =  this.getGradient(...bottomRight)\r\n        \r\n        /*console.log(v0,v1,v2,v3)\r\n        console.log(gradientTopLeft, gradientTopRight, gradientBottomLeft,gradientBottomRight  )\r\n        throw 1*/\r\n        const _v0 = [Math.floor(x/cellSize)* cellSize, Math.floor(y/cellSize)* cellSize]\r\n        const v =[x, y ]\r\n        let [localX, localY] = scale(diff(v, _v0), 1/cellSize)\r\n        \r\n        //console.log(localX, localY)\r\n        //console.log(bottomLeft,bottomRight, topRight, topLeft)\r\n       // console.log(this.gradientsMap)\r\n        const fromTopLeft = scale(diff(v, topLeft), 1/cellSize)\r\n        const fromTopRight = scale(diff(v, topRight),1/cellSize)\r\n        const fromBottomLeft = scale(diff(v, bottomLeft),1/cellSize)\r\n        const fromBottomRight = scale(diff(v, bottomRight),1/cellSize)\r\n        \r\n        const tx1 = dot(gradientTopLeft, fromTopLeft)\r\n        const tx2 = dot(gradientTopRight, fromTopRight)\r\n        const bx1 = dot(gradientBottomLeft, fromBottomLeft)\r\n        const bx2 = dot(gradientBottomRight, fromBottomRight)\r\n\r\n        \r\n        //console.log(fromTopLeft, fromTopRight, fromBottomLeft, fromBottomRight)\r\n        //console.log(tx1, tx2, bx1, bx2)\r\n\r\n        localX = quintic(localX)\r\n        localY = quintic(localY)\r\n        const tx = interpolate(tx1, tx2, localX)\r\n        const bx = interpolate(bx1, bx2, localX)\r\n        const p = interpolate(tx, bx, localY)\r\n        const normal = []\r\n        this.cache.set(`${x}_${y}`)\r\n        return p\r\n\r\n    }\r\n    \r\n}\r\n\n\n//# sourceURL=webpack://perlinnoise/./src/perlinnoise.js?");

/***/ }),

/***/ "./src/settings.js":
/*!*************************!*\
  !*** ./src/settings.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    ADAPTIVE : false,\r\n\r\n    CLIP : false,\r\n    BOUNDARY : true,\r\n    BIAS : true,\r\n    BIAS_STRENGTH : 0.01,\r\n\r\n    XMIN : -3,\r\n    XMAX : 3,\r\n    YMIN : -3,\r\n    YMAX : 3,\r\n    ZMIN : -3,\r\n    ZMAX : 3,\r\n});\r\n\r\n\n\n//# sourceURL=webpack://perlinnoise/./src/settings.js?");

/***/ }),

/***/ "./src/shader/index.js":
/*!*****************************!*\
  !*** ./src/shader/index.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _vert_glsl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vert.glsl */ \"./src/shader/vert.glsl\");\n/* harmony import */ var _frag_glsl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./frag.glsl */ \"./src/shader/frag.glsl\");\n\r\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({vert: _vert_glsl__WEBPACK_IMPORTED_MODULE_0__, frag: _frag_glsl__WEBPACK_IMPORTED_MODULE_1__});\n\n//# sourceURL=webpack://perlinnoise/./src/shader/index.js?");

/***/ }),

/***/ "./src/surfaceMesh/index.js":
/*!**********************************!*\
  !*** ./src/surfaceMesh/index.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Terrain)\n/* harmony export */ });\n/* harmony import */ var math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! math */ \"./node_modules/math/index.js\");\n/* harmony import */ var math__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(math__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\nclass Terrain {\r\n  constructor(func, chunkSize = 4, faceSize = 4) {\r\n    this.func = func;\r\n    this.chunks = new Map();\r\n    this.chunkSize = chunkSize;\r\n    this.faceSize = faceSize;\r\n    this.vertIndicesMap = new Map\r\n    this.normalsIndicesMap = new Map()\r\n  }\r\n  generateChunk(xChunk, zChunk) {\r\n    const { chunkSize, faceSize, func } = this;\r\n    const positions = [];\r\n    const normals = [];\r\n    const xStart = xChunk * chunkSize;\r\n    const zStart = zChunk * chunkSize;\r\n    const vertIndicesMap = new Map()\r\n    const normalsIndicesMap = new Map()\r\n    const indices = []\r\n    for (let xx = 0; xx < chunkSize + faceSize; xx += faceSize)\r\n      for (let zz = 0; zz < chunkSize + faceSize; zz += faceSize)\r\n      {\r\n        const x = xx + xStart\r\n        const z = zz + zStart\r\n        const y = func(x, z)\r\n\r\n        const x2 = x + faceSize\r\n        const z2 = z + faceSize\r\n        const y2 = func(x2,z2)\r\n        const y3 = func(x,z2)\r\n        const normal =  math__WEBPACK_IMPORTED_MODULE_0__.vec3.normalize(math__WEBPACK_IMPORTED_MODULE_0__.vec3.cross(math__WEBPACK_IMPORTED_MODULE_0__.vec3.diff([x,y,z], [x2,y2,z2]),math__WEBPACK_IMPORTED_MODULE_0__.vec3.diff([x,y,z], [x,y3,z2])));\r\n\r\n        vertIndicesMap.set(`${xx}_${zz}`, positions.length/3)\r\n        positions.push(x,y,z)\r\n        normals.push(...normal)\r\n      }\r\n      for (let xx = 0; xx < chunkSize; xx += faceSize)\r\n        for (let zz = 0; zz < chunkSize ; zz += faceSize) {\r\n            const x = xx + xStart\r\n            const z = zz + zStart\r\n            const v1 = vertIndicesMap.get(`${xx}_${zz}`);\r\n            const v2 = vertIndicesMap.get(`${xx + faceSize}_${zz}`);\r\n            const v3 = vertIndicesMap.get(`${xx + faceSize}_${zz + faceSize}`);\r\n            const v4 = vertIndicesMap.get(`${xx}_${zz + faceSize}`);\r\n            \r\n            indices.push(v3, v2, v1,  v1, v4, v3);\r\n        \r\n      }\r\n    return { positions, normals, indices, x : xChunk, z : zChunk};\r\n  }\r\n  getChunk(x, z) {\r\n    const key = `${x}_${z}`;\r\n    let chunk = this.chunks.get(key);\r\n    if (chunk) return chunk;\r\n    chunk = this.generateChunk(x, z);\r\n    this.chunks.set(key, chunk);\r\n    return chunk;\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://perlinnoise/./src/surfaceMesh/index.js?");

/***/ }),

/***/ "./node_modules/graphics/src/render/shaders/default/frag.glsl":
/*!********************************************************************!*\
  !*** ./node_modules/graphics/src/render/shaders/default/frag.glsl ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"#version 300 es\\nprecision highp float;\\n \\n\\n\\nuniform vec4 u_color;\\nout vec4 outColor;\\nvoid main() {\\n  \\n  \\n  outColor = u_color;\\n \\n  \\n  \\n}\";\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/src/render/shaders/default/frag.glsl?");

/***/ }),

/***/ "./node_modules/graphics/src/render/shaders/default/vert.glsl":
/*!********************************************************************!*\
  !*** ./node_modules/graphics/src/render/shaders/default/vert.glsl ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"#version 300 es\\n\\nprecision highp float;\\n\\nuniform mat4 u_worldViewProjection;\\n\\n\\nlayout(location = 0) in vec4 a_position;\\nvoid main() {\\n  gl_Position = u_worldViewProjection * a_position;\\n  gl_PointSize = 10.0;\\n}\";\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/src/render/shaders/default/vert.glsl?");

/***/ }),

/***/ "./node_modules/graphics/src/render/shaders/pointLight/frag.glsl":
/*!***********************************************************************!*\
  !*** ./node_modules/graphics/src/render/shaders/pointLight/frag.glsl ***!
  \***********************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"#version 300 es\\nprecision highp float;\\n \\n\\n\\n\\nin vec3 v_normal;\\nin vec3 v_surfaceToView;\\nin vec3 v_surfaceToLight;\\n\\n\\n//uniform sampler2D u_texture1;\\nuniform float u_shininess;\\nuniform vec4 u_color;\\nuniform vec4 u_ambientLight;\\nout vec4 outColor;\\n\\n\\nvoid main() {\\n  \\n  vec3 surfaceToLightDirection = normalize(v_surfaceToLight);\\n  vec3 surfaceToViewDirection = normalize(v_surfaceToView);\\n  vec3 halfVector = normalize(surfaceToLightDirection + surfaceToViewDirection);\\n\\n  vec3 normal = normalize(v_normal);\\n  float light = dot(normal, surfaceToLightDirection);\\n  float specular = 0.0;\\n  if (light > 0.0) {\\n    specular = pow(dot(normal, halfVector), u_shininess);\\n  }\\n  \\n  outColor =  u_color;\\n  outColor.rgb *= light;\\n  outColor.rgb += specular;\\n\\n  outColor.rgb += u_ambientLight.rgb *0.3;\\n  \\n}\";\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/src/render/shaders/pointLight/frag.glsl?");

/***/ }),

/***/ "./node_modules/graphics/src/render/shaders/pointLight/vert.glsl":
/*!***********************************************************************!*\
  !*** ./node_modules/graphics/src/render/shaders/pointLight/vert.glsl ***!
  \***********************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"#version 300 es\\n \\nlayout(location = 0) in vec4 a_position;\\nlayout(location = 1) in vec3 a_normal;\\n\\n\\nuniform mat4 u_matrix;\\nuniform mat4 u_worldViewProjection;\\nuniform vec3 u_lightWorldPosition;\\nuniform vec3 u_viewWorldPosition;\\n\\nout vec3 v_normal;\\nout vec3 v_surfaceToLight;\\nout vec3 v_surfaceToView;\\nvoid main() {\\n    \\n    gl_Position = u_worldViewProjection * a_position;\\n    \\n    vec3 surfaceWorldPosition = (u_matrix * a_position).xyz;\\n    \\n    v_surfaceToLight = u_lightWorldPosition - surfaceWorldPosition;\\n\\n    v_normal = mat3(  u_matrix ) * a_normal;\\n    \\n    v_surfaceToView = u_viewWorldPosition - surfaceWorldPosition;\\n      \\n}\";\n\n//# sourceURL=webpack://perlinnoise/./node_modules/graphics/src/render/shaders/pointLight/vert.glsl?");

/***/ }),

/***/ "./src/shader/frag.glsl":
/*!******************************!*\
  !*** ./src/shader/frag.glsl ***!
  \******************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"#version 300 es\\r\\nprecision highp float;\\r\\n \\r\\nin float height;\\r\\n\\r\\nuniform vec4 u_color;\\r\\nout vec4 outColor;\\r\\nvoid main() {\\r\\n  \\r\\n  outColor = u_color;\\r\\n  outColor.rgb *= (height/50.0)*(height/50.0); //+ (height/255.0) * vec3(0.0, 0.01, 0.05);\\r\\n  \\r\\n \\r\\n  \\r\\n  \\r\\n}\";\n\n//# sourceURL=webpack://perlinnoise/./src/shader/frag.glsl?");

/***/ }),

/***/ "./src/shader/vert.glsl":
/*!******************************!*\
  !*** ./src/shader/vert.glsl ***!
  \******************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"#version 300 es\\r\\n\\r\\nprecision highp float;\\r\\n\\r\\nuniform mat4 u_worldViewProjection;\\r\\n\\r\\nout float height;\\r\\nlayout(location = 0) in vec4 a_position;\\r\\nvoid main() {\\r\\n  vec4 pos = u_worldViewProjection * a_position;\\r\\n  gl_Position = pos;\\r\\n  \\r\\n\\r\\n  height = a_position.y;\\r\\n}\";\n\n//# sourceURL=webpack://perlinnoise/./src/shader/vert.glsl?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./main.js");
/******/ 	
/******/ })()
;